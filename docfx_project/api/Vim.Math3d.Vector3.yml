### YamlMime:ManagedReference
items:
- uid: Vim.Math3d.Vector3
  commentId: T:Vim.Math3d.Vector3
  id: Vector3
  parent: Vim.Math3d
  children:
  - Vim.Math3d.Vector3.#ctor(System.Single)
  - Vim.Math3d.Vector3.#ctor(System.Single,System.Single)
  - Vim.Math3d.Vector3.#ctor(System.Single,System.Single,System.Single)
  - Vim.Math3d.Vector3.#ctor(System.ValueTuple{System.Single,System.Single,System.Single})
  - Vim.Math3d.Vector3.#ctor(Vim.Math3d.Vector2,System.Single)
  - Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.AlmostZero(System.Single)
  - Vim.Math3d.Vector3.AnyComponentNegative
  - Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  - Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Create(System.Single,System.Single,System.Single)
  - Vim.Math3d.Vector3.Create(System.ValueTuple{System.Single,System.Single,System.Single})
  - Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  - Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Equals(System.Object)
  - Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.GetComponent(System.Int32)
  - Vim.Math3d.Vector3.GetHashCode
  - Vim.Math3d.Vector3.IsInfinity
  - Vim.Math3d.Vector3.IsNaN
  - Vim.Math3d.Vector3.Magnitude
  - Vim.Math3d.Vector3.MagnitudeSquared
  - Vim.Math3d.Vector3.MaxComponent
  - Vim.Math3d.Vector3.MaxValue
  - Vim.Math3d.Vector3.MinComponent
  - Vim.Math3d.Vector3.MinValue
  - Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.NumComponents
  - Vim.Math3d.Vector3.One
  - Vim.Math3d.Vector3.op_Addition(System.Single,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Division(System.Single,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  - Vim.Math3d.Vector3.op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  - Vim.Math3d.Vector3.op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Multiply(System.Single,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Subtraction(System.Single,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.op_UnaryNegation(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.ProductComponents
  - Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.SetX(System.Single)
  - Vim.Math3d.Vector3.SetY(System.Single)
  - Vim.Math3d.Vector3.SetZ(System.Single)
  - Vim.Math3d.Vector3.SumComponents
  - Vim.Math3d.Vector3.SumSqrComponents
  - Vim.Math3d.Vector3.ToString
  - Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  - Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  - Vim.Math3d.Vector3.UnitX
  - Vim.Math3d.Vector3.UnitY
  - Vim.Math3d.Vector3.UnitZ
  - Vim.Math3d.Vector3.X
  - Vim.Math3d.Vector3.XY
  - Vim.Math3d.Vector3.XZ
  - Vim.Math3d.Vector3.XZY
  - Vim.Math3d.Vector3.Y
  - Vim.Math3d.Vector3.YXZ
  - Vim.Math3d.Vector3.YZ
  - Vim.Math3d.Vector3.YZX
  - Vim.Math3d.Vector3.Z
  - Vim.Math3d.Vector3.Zero
  - Vim.Math3d.Vector3.ZXY
  - Vim.Math3d.Vector3.ZYX
  langs:
  - csharp
  - vb
  name: Vector3
  nameWithType: Vector3
  fullName: Vim.Math3d.Vector3
  type: Struct
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Vector3
    path: ../src/StructsPartial.cs
    startLine: 37
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataContract]

      public readonly struct Vector3 : IEquatable<Vector3>, IComparable<Vector3>, ITransformable3D<Vector3>
    content.vb: >-
      <DataContract>

      Public Structure Vector3
          Implements IEquatable(Of Vector3), IComparable(Of Vector3), ITransformable3D(Of Vector3)
  implements:
  - System.IEquatable{Vim.Math3d.Vector3}
  - System.IComparable{Vim.Math3d.Vector3}
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.Matrix4x4[])
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.Vector3)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Translate``1(System.Single,System.Single,System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.Quaternion)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.Vector3)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(System.Single,System.Single,System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleX``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleY``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleZ``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Rotate``1(System.Single,System.Single,System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.Plane)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateX``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateY``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateZ``1(System.Single)
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Negate
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.LengthSquared
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Length
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Normalize
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.SafeNormalize
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.SquareRoot
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Abs
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Acos
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Asin
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Atan
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cos
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cosh
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Exp
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Log
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Log10
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sin
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sinh
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sqrt
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Tan
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Tanh
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Inverse
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Ceiling
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Floor
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Round
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Truncate
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sqr
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cube
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToRadians
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToDegrees
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToVector2
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToVector4
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsNonZeroAndValid
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsZeroOrInvalid
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToLine
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Along(System.Single)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.Transform(Vim.Math3d.Quaternion)
  - Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToMatrix
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Vim.Math3d.Vector3.X
  commentId: F:Vim.Math3d.Vector3.X
  id: X
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: X
  nameWithType: Vector3.X
  fullName: Vim.Math3d.Vector3.X
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: X
    path: ../src/Structs.cs
    startLine: 86
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.Y
  commentId: F:Vim.Math3d.Vector3.Y
  id: Y
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: Vector3.Y
  fullName: Vim.Math3d.Vector3.Y
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Y
    path: ../src/Structs.cs
    startLine: 88
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.Z
  commentId: F:Vim.Math3d.Vector3.Z
  id: Z
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: Vector3.Z
  fullName: Vim.Math3d.Vector3.Z
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Z
    path: ../src/Structs.cs
    startLine: 90
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float Z
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly Z As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.#ctor(System.ValueTuple{System.Single,System.Single,System.Single})
  commentId: M:Vim.Math3d.Vector3.#ctor(System.ValueTuple{System.Single,System.Single,System.Single})
  id: '#ctor(System.ValueTuple{System.Single,System.Single,System.Single})'
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Vector3((Single x, Single y, Single z))
  nameWithType: Vector3.Vector3((Single x, Single y, Single z))
  fullName: Vim.Math3d.Vector3.Vector3(System.ValueTuple<System.Single, System.Single, System.Single>)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 91
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public Vector3((float x, float y, float z) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single}
    content.vb: Public Sub New(tuple As(x As Single, y As Single, z As Single)(Of Single , Single, Single))
  overload: Vim.Math3d.Vector3.#ctor*
  nameWithType.vb: Vector3.Vector3((x As Single, y As Single, z As Single)(Of Single, Single, Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.Vector3.Vector3(System.ValueTuple(Of System.Single, System.Single, System.Single))
  name.vb: Vector3((x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.#ctor(System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Single, Single, Single)
  nameWithType: Vector3.Vector3(Single, Single, Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 92
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public Vector3(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single, z As Single)
  overload: Vim.Math3d.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Create(System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Vector3.Create(System.Single,System.Single,System.Single)
  id: Create(System.Single,System.Single,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Create(Single, Single, Single)
  nameWithType: Vector3.Create(Single, Single, Single)
  fullName: Vim.Math3d.Vector3.Create(System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 93
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 Create(float x, float y, float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Function Create(x As Single, y As Single, z As Single) As Vector3
  overload: Vim.Math3d.Vector3.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.Create(System.ValueTuple{System.Single,System.Single,System.Single})
  commentId: M:Vim.Math3d.Vector3.Create(System.ValueTuple{System.Single,System.Single,System.Single})
  id: Create(System.ValueTuple{System.Single,System.Single,System.Single})
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Create((Single x, Single y, Single z))
  nameWithType: Vector3.Create((Single x, Single y, Single z))
  fullName: Vim.Math3d.Vector3.Create(System.ValueTuple<System.Single, System.Single, System.Single>)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 94
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 Create((float x, float y, float z) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single}
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Function Create(tuple As(x As Single, y As Single, z As Single)(Of Single , Single, Single)) As Vector3
  overload: Vim.Math3d.Vector3.Create*
  nameWithType.vb: Vector3.Create((x As Single, y As Single, z As Single)(Of Single, Single, Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.Vector3.Create(System.ValueTuple(Of System.Single, System.Single, System.Single))
  name.vb: Create((x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.Equals(System.Object)
  commentId: M:Vim.Math3d.Vector3.Equals(System.Object)
  id: Equals(System.Object)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Vector3.Equals(Object)
  fullName: Vim.Math3d.Vector3.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 95
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Vim.Math3d.Vector3.Equals*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.Vector3.GetHashCode
  commentId: M:Vim.Math3d.Vector3.GetHashCode
  id: GetHashCode
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Vector3.GetHashCode()
  fullName: Vim.Math3d.Vector3.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: GetHashCode
    path: ../src/Structs.cs
    startLine: 96
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Vim.Math3d.Vector3.GetHashCode*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.Vector3.ToString
  commentId: M:Vim.Math3d.Vector3.ToString
  id: ToString
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Vector3.ToString()
  fullName: Vim.Math3d.Vector3.ToString()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ToString
    path: ../src/Structs.cs
    startLine: 97
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Vim.Math3d.Vector3.ToString*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  commentId: M:Vim.Math3d.Vector3.Deconstruct(System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Deconstruct(out Single, out Single, out Single)
  nameWithType: Vector3.Deconstruct(out Single, out Single, out Single)
  fullName: Vim.Math3d.Vector3.Deconstruct(out System.Single, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Deconstruct
    path: ../src/Structs.cs
    startLine: 98
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly void Deconstruct(out float x, out float y, out float z)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: z
      type: System.Single
    content.vb: Public Sub Deconstruct(ByRef x As Single, ByRef y As Single, ByRef z As Single)
  overload: Vim.Math3d.Vector3.Deconstruct*
  nameWithType.vb: Vector3.Deconstruct(ByRef Single, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.Vector3.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  id: Equals(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Equals(Vector3)
  nameWithType: Vector3.Equals(Vector3)
  fullName: Vim.Math3d.Vector3.Equals(Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 99
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool Equals(Vector3 x)
    parameters:
    - id: x
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Function Equals(x As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.Equals*
  implements:
  - System.IEquatable{Vim.Math3d.Vector3}.Equals(Vim.Math3d.Vector3)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Equality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Equality(Vector3, Vector3)
  nameWithType: Vector3.Equality(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Equality(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Equality
    path: ../src/Structs.cs
    startLine: 100
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator ==(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Inequality(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Inequality(Vector3, Vector3)
  nameWithType: Vector3.Inequality(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Inequality(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Inequality
    path: ../src/Structs.cs
    startLine: 101
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator !=(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  commentId: M:Vim.Math3d.Vector3.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  id: op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single})~Vim.Math3d.Vector3
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Implicit((Single x, Single y, Single z) to Vector3)
  nameWithType: Vector3.Implicit((Single x, Single y, Single z) to Vector3)
  fullName: Vim.Math3d.Vector3.Implicit(System.ValueTuple<System.Single, System.Single, System.Single> to Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 102
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator Vector3((float x, float y, float z) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single}
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Widening Operator CType(tuple As(x As Single, y As Single, z As Single)(Of Single , Single, Single)) As Vector3
  overload: Vim.Math3d.Vector3.op_Implicit*
  nameWithType.vb: Vector3.Widening((x As Single, y As Single, z As Single)(Of Single, Single, Single) to Vector3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.Vector3.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single) to Vim.Math3d.Vector3)
  name.vb: Widening((x As Single, y As Single, z As Single)(Of Single, Single, Single) to Vector3)
- uid: Vim.Math3d.Vector3.op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  commentId: M:Vim.Math3d.Vector3.op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  id: op_Implicit(Vim.Math3d.Vector3)~System.ValueTuple{System.Single,System.Single,System.Single}
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Implicit(Vector3 to (Single x, Single y, Single z))
  nameWithType: Vector3.Implicit(Vector3 to (Single x, Single y, Single z))
  fullName: Vim.Math3d.Vector3.Implicit(Vim.Math3d.Vector3 to System.ValueTuple<System.Single, System.Single, System.Single>)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 103
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator (float x, float y, float z)(Vector3 self)
    parameters:
    - id: self
      type: Vim.Math3d.Vector3
    return:
      type: System.ValueTuple{System.Single,System.Single,System.Single}
    content.vb: Public Shared Widening Operator CType(self As Vector3) As(x As Single, y As Single, z As Single)(Of Single , Single, Single)
  overload: Vim.Math3d.Vector3.op_Implicit*
  nameWithType.vb: Vector3.Widening(Vector3 to (x As Single, y As Single, z As Single)(Of Single, Single, Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.Vector3.Widening(Vim.Math3d.Vector3 to System.ValueTuple(Of System.Single, System.Single, System.Single))
  name.vb: Widening(Vector3 to (x As Single, y As Single, z As Single)(Of Single, Single, Single))
- uid: Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3,System.Single)
  id: AlmostEquals(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: AlmostEquals(Vector3, Single)
  nameWithType: Vector3.AlmostEquals(Vector3, Single)
  fullName: Vim.Math3d.Vector3.AlmostEquals(Vim.Math3d.Vector3, System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AlmostEquals
    path: ../src/Structs.cs
    startLine: 105
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AlmostEquals(Vector3 x, float tolerance = 1E-07F)
    parameters:
    - id: x
      type: Vim.Math3d.Vector3
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function AlmostEquals(x As Vector3, tolerance As Single = 1E-07F) As Boolean
  overload: Vim.Math3d.Vector3.AlmostEquals*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Zero
  commentId: F:Vim.Math3d.Vector3.Zero
  id: Zero
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: Vector3.Zero
  fullName: Vim.Math3d.Vector3.Zero
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Zero
    path: ../src/Structs.cs
    startLine: 106
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 Zero
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Zero As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.MinValue
  commentId: F:Vim.Math3d.Vector3.MinValue
  id: MinValue
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: Vector3.MinValue
  fullName: Vim.Math3d.Vector3.MinValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MinValue
    path: ../src/Structs.cs
    startLine: 107
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 MinValue
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared MinValue As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.MaxValue
  commentId: F:Vim.Math3d.Vector3.MaxValue
  id: MaxValue
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: Vector3.MaxValue
  fullName: Vim.Math3d.Vector3.MaxValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MaxValue
    path: ../src/Structs.cs
    startLine: 108
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 MaxValue
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared MaxValue As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.SetX(System.Single)
  commentId: M:Vim.Math3d.Vector3.SetX(System.Single)
  id: SetX(System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: SetX(Single)
  nameWithType: Vector3.SetX(Single)
  fullName: Vim.Math3d.Vector3.SetX(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetX
    path: ../src/Structs.cs
    startLine: 109
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 SetX(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function SetX(x As Single) As Vector3
  overload: Vim.Math3d.Vector3.SetX*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.SetY(System.Single)
  commentId: M:Vim.Math3d.Vector3.SetY(System.Single)
  id: SetY(System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: SetY(Single)
  nameWithType: Vector3.SetY(Single)
  fullName: Vim.Math3d.Vector3.SetY(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetY
    path: ../src/Structs.cs
    startLine: 110
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 SetY(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function SetY(x As Single) As Vector3
  overload: Vim.Math3d.Vector3.SetY*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.SetZ(System.Single)
  commentId: M:Vim.Math3d.Vector3.SetZ(System.Single)
  id: SetZ(System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: SetZ(Single)
  nameWithType: Vector3.SetZ(Single)
  fullName: Vim.Math3d.Vector3.SetZ(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetZ
    path: ../src/Structs.cs
    startLine: 111
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 SetZ(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function SetZ(x As Single) As Vector3
  overload: Vim.Math3d.Vector3.SetZ*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Addition(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Addition(Vector3, Vector3)
  nameWithType: Vector3.Addition(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Addition(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 112
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator +(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator +(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Vector3.op_Addition(Vim.Math3d.Vector3,System.Single)
  id: op_Addition(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Addition(Vector3, Single)
  nameWithType: Vector3.Addition(Vector3, Single)
  fullName: Vim.Math3d.Vector3.Addition(Vim.Math3d.Vector3, System.Single)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 113
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator +(Vector3 value1, float value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator +(value1 As Vector3, value2 As Single) As Vector3
  overload: Vim.Math3d.Vector3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Addition(System.Single,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Addition(System.Single,Vim.Math3d.Vector3)
  id: op_Addition(System.Single,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Addition(Single, Vector3)
  nameWithType: Vector3.Addition(Single, Vector3)
  fullName: Vim.Math3d.Vector3.Addition(System.Single, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 114
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator +(float value1, Vector3 value2)
    parameters:
    - id: value1
      type: System.Single
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator +(value1 As Single, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Subtraction(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Subtraction(Vector3, Vector3)
  nameWithType: Vector3.Subtraction(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Subtraction(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 115
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator -(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator -(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(Vim.Math3d.Vector3,System.Single)
  id: op_Subtraction(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Subtraction(Vector3, Single)
  nameWithType: Vector3.Subtraction(Vector3, Single)
  fullName: Vim.Math3d.Vector3.Subtraction(Vim.Math3d.Vector3, System.Single)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 116
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator -(Vector3 value1, float value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator -(value1 As Vector3, value2 As Single) As Vector3
  overload: Vim.Math3d.Vector3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Subtraction(System.Single,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Subtraction(System.Single,Vim.Math3d.Vector3)
  id: op_Subtraction(System.Single,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Subtraction(Single, Vector3)
  nameWithType: Vector3.Subtraction(Single, Vector3)
  fullName: Vim.Math3d.Vector3.Subtraction(System.Single, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 117
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator -(float value1, Vector3 value2)
    parameters:
    - id: value1
      type: System.Single
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator -(value1 As Single, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Vector3)
  nameWithType: Vector3.Multiply(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Multiply(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 118
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator *(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator *(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Vector3.op_Multiply(Vim.Math3d.Vector3,System.Single)
  id: op_Multiply(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Vector3, Single)
  nameWithType: Vector3.Multiply(Vector3, Single)
  fullName: Vim.Math3d.Vector3.Multiply(Vim.Math3d.Vector3, System.Single)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 119
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator *(Vector3 value1, float value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator *(value1 As Vector3, value2 As Single) As Vector3
  overload: Vim.Math3d.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Multiply(System.Single,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Multiply(System.Single,Vim.Math3d.Vector3)
  id: op_Multiply(System.Single,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Multiply(Single, Vector3)
  nameWithType: Vector3.Multiply(Single, Vector3)
  fullName: Vim.Math3d.Vector3.Multiply(System.Single, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 120
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator *(float value1, Vector3 value2)
    parameters:
    - id: value1
      type: System.Single
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator *(value1 As Single, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_Division(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Division(Vector3, Vector3)
  nameWithType: Vector3.Division(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Division(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 121
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator /(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator /(value1 As Vector3, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Vector3.op_Division(Vim.Math3d.Vector3,System.Single)
  id: op_Division(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Division(Vector3, Single)
  nameWithType: Vector3.Division(Vector3, Single)
  fullName: Vim.Math3d.Vector3.Division(Vim.Math3d.Vector3, System.Single)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 122
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator /(Vector3 value1, float value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: System.Single
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator /(value1 As Vector3, value2 As Single) As Vector3
  overload: Vim.Math3d.Vector3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_Division(System.Single,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_Division(System.Single,Vim.Math3d.Vector3)
  id: op_Division(System.Single,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Division(Single, Vector3)
  nameWithType: Vector3.Division(Single, Vector3)
  fullName: Vim.Math3d.Vector3.Division(System.Single, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 123
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator /(float value1, Vector3 value2)
    parameters:
    - id: value1
      type: System.Single
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator /(value1 As Single, value2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.One
  commentId: F:Vim.Math3d.Vector3.One
  id: One
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: One
  nameWithType: Vector3.One
  fullName: Vim.Math3d.Vector3.One
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: One
    path: ../src/Structs.cs
    startLine: 124
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 One
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared One As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.UnitX
  commentId: F:Vim.Math3d.Vector3.UnitX
  id: UnitX
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: Vector3.UnitX
  fullName: Vim.Math3d.Vector3.UnitX
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitX
    path: ../src/Structs.cs
    startLine: 125
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 UnitX
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared UnitX As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.UnitY
  commentId: F:Vim.Math3d.Vector3.UnitY
  id: UnitY
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: Vector3.UnitY
  fullName: Vim.Math3d.Vector3.UnitY
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitY
    path: ../src/Structs.cs
    startLine: 126
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 UnitY
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared UnitY As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.UnitZ
  commentId: F:Vim.Math3d.Vector3.UnitZ
  id: UnitZ
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: Vector3.UnitZ
  fullName: Vim.Math3d.Vector3.UnitZ
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitZ
    path: ../src/Structs.cs
    startLine: 127
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 UnitZ
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared UnitZ As Vector3
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.#ctor(System.Single)
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Single)
  nameWithType: Vector3.Vector3(Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 128
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public Vector3(float value)
    parameters:
    - id: value
      type: System.Single
    content.vb: Public Sub New(value As Single)
  overload: Vim.Math3d.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.op_UnaryNegation(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_UnaryNegation(Vim.Math3d.Vector3)
  id: op_UnaryNegation(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: UnaryNegation(Vector3)
  nameWithType: Vector3.UnaryNegation(Vector3)
  fullName: Vim.Math3d.Vector3.UnaryNegation(Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_UnaryNegation
    path: ../src/Structs.cs
    startLine: 129
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static Vector3 operator -(Vector3 value)
    parameters:
    - id: value
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Shared Operator -(value As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3, Vector3)
  nameWithType: Vector3.Dot(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Dot
    path: ../src/Structs.cs
    startLine: 130
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static float Dot(Vector3 value1, Vector3 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.Vector3
    - id: value2
      type: Vim.Math3d.Vector3
    return:
      type: System.Single
    content.vb: Public Shared Function Dot(value1 As Vector3, value2 As Vector3) As Single
  overload: Vim.Math3d.Vector3.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  id: Dot(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Dot(Vector3)
  nameWithType: Vector3.Dot(Vector3)
  fullName: Vim.Math3d.Vector3.Dot(Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Dot
    path: ../src/Structs.cs
    startLine: 131
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float Dot(Vector3 value)
    parameters:
    - id: value
      type: Vim.Math3d.Vector3
    return:
      type: System.Single
    content.vb: Public Function Dot(value As Vector3) As Single
  overload: Vim.Math3d.Vector3.Dot*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.AlmostZero(System.Single)
  commentId: M:Vim.Math3d.Vector3.AlmostZero(System.Single)
  id: AlmostZero(System.Single)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: AlmostZero(Single)
  nameWithType: Vector3.AlmostZero(Single)
  fullName: Vim.Math3d.Vector3.AlmostZero(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AlmostZero
    path: ../src/Structs.cs
    startLine: 132
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AlmostZero(float tolerance = 1E-07F)
    parameters:
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function AlmostZero(tolerance As Single = 1E-07F) As Boolean
  overload: Vim.Math3d.Vector3.AlmostZero*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.AnyComponentNegative
  commentId: M:Vim.Math3d.Vector3.AnyComponentNegative
  id: AnyComponentNegative
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: AnyComponentNegative()
  nameWithType: Vector3.AnyComponentNegative()
  fullName: Vim.Math3d.Vector3.AnyComponentNegative()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AnyComponentNegative
    path: ../src/Structs.cs
    startLine: 133
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AnyComponentNegative()
    return:
      type: System.Boolean
    content.vb: Public Function AnyComponentNegative As Boolean
  overload: Vim.Math3d.Vector3.AnyComponentNegative*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.MinComponent
  commentId: M:Vim.Math3d.Vector3.MinComponent
  id: MinComponent
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MinComponent()
  nameWithType: Vector3.MinComponent()
  fullName: Vim.Math3d.Vector3.MinComponent()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MinComponent
    path: ../src/Structs.cs
    startLine: 134
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float MinComponent()
    return:
      type: System.Single
    content.vb: Public Function MinComponent As Single
  overload: Vim.Math3d.Vector3.MinComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.MaxComponent
  commentId: M:Vim.Math3d.Vector3.MaxComponent
  id: MaxComponent
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MaxComponent()
  nameWithType: Vector3.MaxComponent()
  fullName: Vim.Math3d.Vector3.MaxComponent()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MaxComponent
    path: ../src/Structs.cs
    startLine: 135
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float MaxComponent()
    return:
      type: System.Single
    content.vb: Public Function MaxComponent As Single
  overload: Vim.Math3d.Vector3.MaxComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.SumComponents
  commentId: M:Vim.Math3d.Vector3.SumComponents
  id: SumComponents
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: SumComponents()
  nameWithType: Vector3.SumComponents()
  fullName: Vim.Math3d.Vector3.SumComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SumComponents
    path: ../src/Structs.cs
    startLine: 136
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float SumComponents()
    return:
      type: System.Single
    content.vb: Public Function SumComponents As Single
  overload: Vim.Math3d.Vector3.SumComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.SumSqrComponents
  commentId: M:Vim.Math3d.Vector3.SumSqrComponents
  id: SumSqrComponents
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: SumSqrComponents()
  nameWithType: Vector3.SumSqrComponents()
  fullName: Vim.Math3d.Vector3.SumSqrComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SumSqrComponents
    path: ../src/Structs.cs
    startLine: 137
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float SumSqrComponents()
    return:
      type: System.Single
    content.vb: Public Function SumSqrComponents As Single
  overload: Vim.Math3d.Vector3.SumSqrComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.ProductComponents
  commentId: M:Vim.Math3d.Vector3.ProductComponents
  id: ProductComponents
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: ProductComponents()
  nameWithType: Vector3.ProductComponents()
  fullName: Vim.Math3d.Vector3.ProductComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ProductComponents
    path: ../src/Structs.cs
    startLine: 138
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float ProductComponents()
    return:
      type: System.Single
    content.vb: Public Function ProductComponents As Single
  overload: Vim.Math3d.Vector3.ProductComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.GetComponent(System.Int32)
  commentId: M:Vim.Math3d.Vector3.GetComponent(System.Int32)
  id: GetComponent(System.Int32)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: GetComponent(Int32)
  nameWithType: Vector3.GetComponent(Int32)
  fullName: Vim.Math3d.Vector3.GetComponent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: GetComponent
    path: ../src/Structs.cs
    startLine: 139
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly float GetComponent(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetComponent(n As Integer) As Single
  overload: Vim.Math3d.Vector3.GetComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.MagnitudeSquared
  commentId: M:Vim.Math3d.Vector3.MagnitudeSquared
  id: MagnitudeSquared
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MagnitudeSquared()
  nameWithType: Vector3.MagnitudeSquared()
  fullName: Vim.Math3d.Vector3.MagnitudeSquared()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MagnitudeSquared
    path: ../src/Structs.cs
    startLine: 140
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double MagnitudeSquared()
    return:
      type: System.Double
    content.vb: Public Function MagnitudeSquared As Double
  overload: Vim.Math3d.Vector3.MagnitudeSquared*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Magnitude
  commentId: M:Vim.Math3d.Vector3.Magnitude
  id: Magnitude
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Magnitude()
  nameWithType: Vector3.Magnitude()
  fullName: Vim.Math3d.Vector3.Magnitude()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Magnitude
    path: ../src/Structs.cs
    startLine: 141
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double Magnitude()
    return:
      type: System.Double
    content.vb: Public Function Magnitude As Double
  overload: Vim.Math3d.Vector3.Magnitude*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.NumComponents
  commentId: F:Vim.Math3d.Vector3.NumComponents
  id: NumComponents
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: NumComponents
  nameWithType: Vector3.NumComponents
  fullName: Vim.Math3d.Vector3.NumComponents
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: NumComponents
    path: ../src/Structs.cs
    startLine: 142
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public const int NumComponents = 3
    return:
      type: System.Int32
    content.vb: Public Const NumComponents As Integer = 3
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Vim.Math3d.Vector3.IsNaN
  commentId: M:Vim.Math3d.Vector3.IsNaN
  id: IsNaN
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: IsNaN()
  nameWithType: Vector3.IsNaN()
  fullName: Vim.Math3d.Vector3.IsNaN()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: IsNaN
    path: ../src/Structs.cs
    startLine: 144
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool IsNaN()
    return:
      type: System.Boolean
    content.vb: Public Function IsNaN As Boolean
  overload: Vim.Math3d.Vector3.IsNaN*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.IsInfinity
  commentId: M:Vim.Math3d.Vector3.IsInfinity
  id: IsInfinity
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: IsInfinity()
  nameWithType: Vector3.IsInfinity()
  fullName: Vim.Math3d.Vector3.IsInfinity()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: IsInfinity
    path: ../src/Structs.cs
    startLine: 145
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool IsInfinity()
    return:
      type: System.Boolean
    content.vb: Public Function IsInfinity As Boolean
  overload: Vim.Math3d.Vector3.IsInfinity*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  id: CompareTo(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: CompareTo(Vector3)
  nameWithType: Vector3.CompareTo(Vector3)
  fullName: Vim.Math3d.Vector3.CompareTo(Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: CompareTo
    path: ../src/Structs.cs
    startLine: 146
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly int CompareTo(Vector3 x)
    parameters:
    - id: x
      type: Vim.Math3d.Vector3
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(x As Vector3) As Integer
  overload: Vim.Math3d.Vector3.CompareTo*
  implements:
  - System.IComparable{Vim.Math3d.Vector3}.CompareTo(Vim.Math3d.Vector3)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_LessThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: LessThan(Vector3, Vector3)
  nameWithType: Vector3.LessThan(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.LessThan(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_LessThan
    path: ../src/Structs.cs
    startLine: 147
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator <(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_LessThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Vector3, Vector3)
  nameWithType: Vector3.LessThanOrEqual(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.LessThanOrEqual(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_LessThanOrEqual
    path: ../src/Structs.cs
    startLine: 148
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator <=(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_GreaterThan(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: GreaterThan(Vector3, Vector3)
  nameWithType: Vector3.GreaterThan(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.GreaterThan(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_GreaterThan
    path: ../src/Structs.cs
    startLine: 149
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator>(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: op_GreaterThanOrEqual(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Vector3, Vector3)
  nameWithType: Vector3.GreaterThanOrEqual(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.GreaterThanOrEqual(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_GreaterThanOrEqual
    path: ../src/Structs.cs
    startLine: 150
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator >=(Vector3 x0, Vector3 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.Vector3
    - id: x1
      type: Vim.Math3d.Vector3
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(x0 As Vector3, x1 As Vector3) As Boolean
  overload: Vim.Math3d.Vector3.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.Vector3.#ctor(System.Single,System.Single)
  commentId: M:Vim.Math3d.Vector3.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Single, Single)
  nameWithType: Vector3.Vector3(Single, Single)
  fullName: Vim.Math3d.Vector3.Vector3(System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/StructsPartial.cs
    startLine: 39
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public Vector3(float x, float y)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    content.vb: Public Sub New(x As Single, y As Single)
  overload: Vim.Math3d.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.#ctor(Vim.Math3d.Vector2,System.Single)
  commentId: M:Vim.Math3d.Vector3.#ctor(Vim.Math3d.Vector2,System.Single)
  id: '#ctor(Vim.Math3d.Vector2,System.Single)'
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Vector3(Vector2, Single)
  nameWithType: Vector3.Vector3(Vector2, Single)
  fullName: Vim.Math3d.Vector3.Vector3(Vim.Math3d.Vector2, System.Single)
  type: Constructor
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/StructsPartial.cs
    startLine: 44
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public Vector3(Vector2 xy, float z)
    parameters:
    - id: xy
      type: Vim.Math3d.Vector2
    - id: z
      type: System.Single
    content.vb: Public Sub New(xy As Vector2, z As Single)
  overload: Vim.Math3d.Vector3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  commentId: M:Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  id: Transform(Vim.Math3d.Matrix4x4)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Transform(Matrix4x4)
  nameWithType: Vector3.Transform(Matrix4x4)
  fullName: Vim.Math3d.Vector3.Transform(Vim.Math3d.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Transform
    path: ../src/StructsPartial.cs
    startLine: 52
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  summary: "\nTransforms a vector by the given matrix.\n"
  example: []
  syntax:
    content: public readonly Vector3 Transform(Matrix4x4 matrix)
    parameters:
    - id: matrix
      type: Vim.Math3d.Matrix4x4
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function Transform(matrix As Matrix4x4) As Vector3
  overload: Vim.Math3d.Vector3.Transform*
  implements:
  - Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Transform(Vim.Math3d.Matrix4x4)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  id: Cross(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Cross(Vector3)
  nameWithType: Vector3.Cross(Vector3)
  fullName: Vim.Math3d.Vector3.Cross(Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Cross
    path: ../src/StructsPartial.cs
    startLine: 62
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  summary: "\nComputes the cross product of two vectors.\n"
  example: []
  syntax:
    content: public readonly Vector3 Cross(Vector3 vector2)
    parameters:
    - id: vector2
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function Cross(vector2 As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.Cross*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  id: MixedProduct(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: MixedProduct(Vector3, Vector3)
  nameWithType: Vector3.MixedProduct(Vector3, Vector3)
  fullName: Vim.Math3d.Vector3.MixedProduct(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MixedProduct
    path: ../src/StructsPartial.cs
    startLine: 72
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  summary: "\nReturns the mixed product\n"
  example: []
  syntax:
    content: public readonly double MixedProduct(Vector3 v1, Vector3 v2)
    parameters:
    - id: v1
      type: Vim.Math3d.Vector3
    - id: v2
      type: Vim.Math3d.Vector3
    return:
      type: System.Double
    content.vb: Public Function MixedProduct(v1 As Vector3, v2 As Vector3) As Double
  overload: Vim.Math3d.Vector3.MixedProduct*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  id: Reflect(Vim.Math3d.Vector3)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Reflect(Vector3)
  nameWithType: Vector3.Reflect(Vector3)
  fullName: Vim.Math3d.Vector3.Reflect(Vim.Math3d.Vector3)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Reflect
    path: ../src/StructsPartial.cs
    startLine: 79
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  summary: "\nReturns the reflection of a vector off a surface that has the specified normal.\n"
  example: []
  syntax:
    content: public readonly Vector3 Reflect(Vector3 normal)
    parameters:
    - id: normal
      type: Vim.Math3d.Vector3
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function Reflect(normal As Vector3) As Vector3
  overload: Vim.Math3d.Vector3.Reflect*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  commentId: M:Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  id: TransformNormal(Vim.Math3d.Matrix4x4)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: TransformNormal(Matrix4x4)
  nameWithType: Vector3.TransformNormal(Matrix4x4)
  fullName: Vim.Math3d.Vector3.TransformNormal(Vim.Math3d.Matrix4x4)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: TransformNormal
    path: ../src/StructsPartial.cs
    startLine: 86
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  summary: "\nTransforms a vector normal by the given matrix.\n"
  example: []
  syntax:
    content: public readonly Vector3 TransformNormal(Matrix4x4 matrix)
    parameters:
    - id: matrix
      type: Vim.Math3d.Matrix4x4
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function TransformNormal(matrix As Matrix4x4) As Vector3
  overload: Vim.Math3d.Vector3.TransformNormal*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  commentId: M:Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  id: Clamp(Vim.Math3d.AABox)
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: Clamp(AABox)
  nameWithType: Vector3.Clamp(AABox)
  fullName: Vim.Math3d.Vector3.Clamp(Vim.Math3d.AABox)
  type: Method
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Clamp
    path: ../src/StructsPartial.cs
    startLine: 93
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 Clamp(AABox box)
    parameters:
    - id: box
      type: Vim.Math3d.AABox
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public Function Clamp(box As AABox) As Vector3
  overload: Vim.Math3d.Vector3.Clamp*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.Vector3.XY
  commentId: P:Vim.Math3d.Vector3.XY
  id: XY
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: XY
  nameWithType: Vector3.XY
  fullName: Vim.Math3d.Vector3.XY
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: XY
    path: ../src/StructsPartial.cs
    startLine: 97
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector2 XY { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector2
    content.vb: Public ReadOnly Property XY As Vector2
  overload: Vim.Math3d.Vector3.XY*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.XZ
  commentId: P:Vim.Math3d.Vector3.XZ
  id: XZ
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: XZ
  nameWithType: Vector3.XZ
  fullName: Vim.Math3d.Vector3.XZ
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: XZ
    path: ../src/StructsPartial.cs
    startLine: 98
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector2 XZ { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector2
    content.vb: Public ReadOnly Property XZ As Vector2
  overload: Vim.Math3d.Vector3.XZ*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.YZ
  commentId: P:Vim.Math3d.Vector3.YZ
  id: YZ
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: YZ
  nameWithType: Vector3.YZ
  fullName: Vim.Math3d.Vector3.YZ
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: YZ
    path: ../src/StructsPartial.cs
    startLine: 99
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector2 YZ { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector2
    content.vb: Public ReadOnly Property YZ As Vector2
  overload: Vim.Math3d.Vector3.YZ*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.XZY
  commentId: P:Vim.Math3d.Vector3.XZY
  id: XZY
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: XZY
  nameWithType: Vector3.XZY
  fullName: Vim.Math3d.Vector3.XZY
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: XZY
    path: ../src/StructsPartial.cs
    startLine: 100
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 XZY { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public ReadOnly Property XZY As Vector3
  overload: Vim.Math3d.Vector3.XZY*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.ZXY
  commentId: P:Vim.Math3d.Vector3.ZXY
  id: ZXY
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: ZXY
  nameWithType: Vector3.ZXY
  fullName: Vim.Math3d.Vector3.ZXY
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ZXY
    path: ../src/StructsPartial.cs
    startLine: 101
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 ZXY { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public ReadOnly Property ZXY As Vector3
  overload: Vim.Math3d.Vector3.ZXY*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.ZYX
  commentId: P:Vim.Math3d.Vector3.ZYX
  id: ZYX
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: ZYX
  nameWithType: Vector3.ZYX
  fullName: Vim.Math3d.Vector3.ZYX
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ZYX
    path: ../src/StructsPartial.cs
    startLine: 102
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 ZYX { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public ReadOnly Property ZYX As Vector3
  overload: Vim.Math3d.Vector3.ZYX*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.YXZ
  commentId: P:Vim.Math3d.Vector3.YXZ
  id: YXZ
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: YXZ
  nameWithType: Vector3.YXZ
  fullName: Vim.Math3d.Vector3.YXZ
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: YXZ
    path: ../src/StructsPartial.cs
    startLine: 103
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 YXZ { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public ReadOnly Property YXZ As Vector3
  overload: Vim.Math3d.Vector3.YXZ*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.Vector3.YZX
  commentId: P:Vim.Math3d.Vector3.YZX
  id: YZX
  parent: Vim.Math3d.Vector3
  langs:
  - csharp
  - vb
  name: YZX
  nameWithType: Vector3.YZX
  fullName: Vim.Math3d.Vector3.YZX
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: YZX
    path: ../src/StructsPartial.cs
    startLine: 104
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector3 YZX { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector3
    content.vb: Public ReadOnly Property YZX As Vector3
  overload: Vim.Math3d.Vector3.YZX*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Vim.Math3d
  commentId: N:Vim.Math3d
  name: Vim.Math3d
  nameWithType: Vim.Math3d
  fullName: Vim.Math3d
- uid: System.IEquatable{Vim.Math3d.Vector3}
  commentId: T:System.IEquatable{Vim.Math3d.Vector3}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Vector3>
  nameWithType: IEquatable<Vector3>
  fullName: System.IEquatable<Vim.Math3d.Vector3>
  nameWithType.vb: IEquatable(Of Vector3)
  fullName.vb: System.IEquatable(Of Vim.Math3d.Vector3)
  name.vb: IEquatable(Of Vector3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Vim.Math3d.Vector3}
  commentId: T:System.IComparable{Vim.Math3d.Vector3}
  parent: System
  definition: System.IComparable`1
  name: IComparable<Vector3>
  nameWithType: IComparable<Vector3>
  fullName: System.IComparable<Vim.Math3d.Vector3>
  nameWithType.vb: IComparable(Of Vector3)
  fullName.vb: System.IComparable(Of Vim.Math3d.Vector3)
  name.vb: IComparable(Of Vector3)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}
  commentId: T:Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}
  parent: Vim.Math3d
  definition: Vim.Math3d.ITransformable3D`1
  name: ITransformable3D<Vector3>
  nameWithType: ITransformable3D<Vector3>
  fullName: Vim.Math3d.ITransformable3D<Vim.Math3d.Vector3>
  nameWithType.vb: ITransformable3D(Of Vector3)
  fullName.vb: Vim.Math3d.ITransformable3D(Of Vim.Math3d.Vector3)
  name.vb: ITransformable3D(Of Vector3)
  spec.csharp:
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.Matrix4x4[])
  commentId: M:Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  name: Transform<Vector3>(Matrix4x4[])
  nameWithType: Transformable3D.Transform<Vector3>(Matrix4x4[])
  fullName: Vim.Math3d.Transformable3D.Transform<Vim.Math3d.Vector3>(Vim.Math3d.Matrix4x4[])
  nameWithType.vb: Transformable3D.Transform(Of Vector3)(Matrix4x4())
  fullName.vb: Vim.Math3d.Transformable3D.Transform(Of Vim.Math3d.Vector3)(Vim.Math3d.Matrix4x4())
  name.vb: Transform(Of Vector3)(Matrix4x4())
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.Matrix4x4[])
    name: Transform<Vector3>
    nameWithType: Transformable3D.Transform<Vector3>
    fullName: Vim.Math3d.Transformable3D.Transform<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.Matrix4x4[])
    name: Transform(Of Vector3)
    nameWithType: Transformable3D.Transform(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Transform(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Translate<Vector3>(Vector3)
  nameWithType: Transformable3D.Translate<Vector3>(Vector3)
  fullName: Vim.Math3d.Transformable3D.Translate<Vim.Math3d.Vector3>(Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.Translate(Of Vector3)(Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of Vim.Math3d.Vector3)(Vim.Math3d.Vector3)
  name.vb: Translate(Of Vector3)(Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.Vector3)
    name: Translate<Vector3>
    nameWithType: Transformable3D.Translate<Vector3>
    fullName: Vim.Math3d.Transformable3D.Translate<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.Vector3)
    name: Translate(Of Vector3)
    nameWithType: Transformable3D.Translate(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Translate(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Translate``1(System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Translate<Vector3>(Single, Single, Single)
  nameWithType: Transformable3D.Translate<Vector3>(Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Translate<Vim.Math3d.Vector3>(System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Translate(Of Vector3)(Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of Vim.Math3d.Vector3)(System.Single, System.Single, System.Single)
  name.vb: Translate(Of Vector3)(Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Translate``1(System.Single,System.Single,System.Single)
    name: Translate<Vector3>
    nameWithType: Transformable3D.Translate<Vector3>
    fullName: Vim.Math3d.Transformable3D.Translate<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Translate``1(System.Single,System.Single,System.Single)
    name: Translate(Of Vector3)
    nameWithType: Transformable3D.Translate(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Translate(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.Quaternion)
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  name: Rotate<Vector3>(Quaternion)
  nameWithType: Transformable3D.Rotate<Vector3>(Quaternion)
  fullName: Vim.Math3d.Transformable3D.Rotate<Vim.Math3d.Vector3>(Vim.Math3d.Quaternion)
  nameWithType.vb: Transformable3D.Rotate(Of Vector3)(Quaternion)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of Vim.Math3d.Vector3)(Vim.Math3d.Quaternion)
  name.vb: Rotate(Of Vector3)(Quaternion)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.Quaternion)
    name: Rotate<Vector3>
    nameWithType: Transformable3D.Rotate<Vector3>
    fullName: Vim.Math3d.Transformable3D.Rotate<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.Quaternion)
    name: Rotate(Of Vector3)
    nameWithType: Transformable3D.Rotate(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Rotate(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: Scale<Vector3>(Single)
  nameWithType: Transformable3D.Scale<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.Scale(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: Scale(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(System.Single)
    name: Scale<Vector3>
    nameWithType: Transformable3D.Scale<Vector3>
    fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(System.Single)
    name: Scale(Of Vector3)
    nameWithType: Transformable3D.Scale(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Scale<Vector3>(Vector3)
  nameWithType: Transformable3D.Scale<Vector3>(Vector3)
  fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>(Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.Scale(Of Vector3)(Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)(Vim.Math3d.Vector3)
  name.vb: Scale(Of Vector3)(Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.Vector3)
    name: Scale<Vector3>
    nameWithType: Transformable3D.Scale<Vector3>
    fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.Vector3)
    name: Scale(Of Vector3)
    nameWithType: Transformable3D.Scale(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Scale``1(System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Scale<Vector3>(Single, Single, Single)
  nameWithType: Transformable3D.Scale<Vector3>(Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>(System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Scale(Of Vector3)(Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)(System.Single, System.Single, System.Single)
  name.vb: Scale(Of Vector3)(Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(System.Single,System.Single,System.Single)
    name: Scale<Vector3>
    nameWithType: Transformable3D.Scale<Vector3>
    fullName: Vim.Math3d.Transformable3D.Scale<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(System.Single,System.Single,System.Single)
    name: Scale(Of Vector3)
    nameWithType: Transformable3D.Scale(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Scale(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleX``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleX<Vector3>(Single)
  nameWithType: Transformable3D.ScaleX<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.ScaleX<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.ScaleX(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleX(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: ScaleX(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleX``1(System.Single)
    name: ScaleX<Vector3>
    nameWithType: Transformable3D.ScaleX<Vector3>
    fullName: Vim.Math3d.Transformable3D.ScaleX<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleX``1(System.Single)
    name: ScaleX(Of Vector3)
    nameWithType: Transformable3D.ScaleX(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.ScaleX(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleY``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleY<Vector3>(Single)
  nameWithType: Transformable3D.ScaleY<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.ScaleY<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.ScaleY(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleY(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: ScaleY(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleY``1(System.Single)
    name: ScaleY<Vector3>
    nameWithType: Transformable3D.ScaleY<Vector3>
    fullName: Vim.Math3d.Transformable3D.ScaleY<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleY``1(System.Single)
    name: ScaleY(Of Vector3)
    nameWithType: Transformable3D.ScaleY(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.ScaleY(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.ScaleZ``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: ScaleZ<Vector3>(Single)
  nameWithType: Transformable3D.ScaleZ<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.ScaleZ<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.ScaleZ(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleZ(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: ScaleZ(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleZ``1(System.Single)
    name: ScaleZ<Vector3>
    nameWithType: Transformable3D.ScaleZ<Vector3>
    fullName: Vim.Math3d.Transformable3D.ScaleZ<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleZ``1(System.Single)
    name: ScaleZ(Of Vector3)
    nameWithType: Transformable3D.ScaleZ(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.ScaleZ(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LookAt<Vector3>(Vector3, Vector3, Vector3)
  nameWithType: Transformable3D.LookAt<Vector3>(Vector3, Vector3, Vector3)
  fullName: Vim.Math3d.Transformable3D.LookAt<Vim.Math3d.Vector3>(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.LookAt(Of Vector3)(Vector3, Vector3, Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.LookAt(Of Vim.Math3d.Vector3)(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  name.vb: LookAt(Of Vector3)(Vector3, Vector3, Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: LookAt<Vector3>
    nameWithType: Transformable3D.LookAt<Vector3>
    fullName: Vim.Math3d.Transformable3D.LookAt<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: LookAt(Of Vector3)
    nameWithType: Transformable3D.LookAt(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.LookAt(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  name: RotateAround<Vector3>(Vector3, Single)
  nameWithType: Transformable3D.RotateAround<Vector3>(Vector3, Single)
  fullName: Vim.Math3d.Transformable3D.RotateAround<Vim.Math3d.Vector3>(Vim.Math3d.Vector3, System.Single)
  nameWithType.vb: Transformable3D.RotateAround(Of Vector3)(Vector3, Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateAround(Of Vim.Math3d.Vector3)(Vim.Math3d.Vector3, System.Single)
  name.vb: RotateAround(Of Vector3)(Vector3, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.Vector3,System.Single)
    name: RotateAround<Vector3>
    nameWithType: Transformable3D.RotateAround<Vector3>
    fullName: Vim.Math3d.Transformable3D.RotateAround<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.Vector3,System.Single)
    name: RotateAround(Of Vector3)
    nameWithType: Transformable3D.RotateAround(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.RotateAround(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Rotate``1(System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  name: Rotate<Vector3>(Single, Single, Single)
  nameWithType: Transformable3D.Rotate<Vector3>(Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Rotate<Vim.Math3d.Vector3>(System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Rotate(Of Vector3)(Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of Vim.Math3d.Vector3)(System.Single, System.Single, System.Single)
  name.vb: Rotate(Of Vector3)(Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(System.Single,System.Single,System.Single)
    name: Rotate<Vector3>
    nameWithType: Transformable3D.Rotate<Vector3>
    fullName: Vim.Math3d.Transformable3D.Rotate<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(System.Single,System.Single,System.Single)
    name: Rotate(Of Vector3)
    nameWithType: Transformable3D.Rotate(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Rotate(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.Plane)
  commentId: M:Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  name: Reflect<Vector3>(Plane)
  nameWithType: Transformable3D.Reflect<Vector3>(Plane)
  fullName: Vim.Math3d.Transformable3D.Reflect<Vim.Math3d.Vector3>(Vim.Math3d.Plane)
  nameWithType.vb: Transformable3D.Reflect(Of Vector3)(Plane)
  fullName.vb: Vim.Math3d.Transformable3D.Reflect(Of Vim.Math3d.Vector3)(Vim.Math3d.Plane)
  name.vb: Reflect(Of Vector3)(Plane)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.Plane)
    name: Reflect<Vector3>
    nameWithType: Transformable3D.Reflect<Vector3>
    fullName: Vim.Math3d.Transformable3D.Reflect<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Plane
    name: Plane
    nameWithType: Plane
    fullName: Vim.Math3d.Plane
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.Plane)
    name: Reflect(Of Vector3)
    nameWithType: Transformable3D.Reflect(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.Reflect(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Plane
    name: Plane
    nameWithType: Plane
    fullName: Vim.Math3d.Plane
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateX``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateX<Vector3>(Single)
  nameWithType: Transformable3D.RotateX<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.RotateX<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.RotateX(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateX(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: RotateX(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateX``1(System.Single)
    name: RotateX<Vector3>
    nameWithType: Transformable3D.RotateX<Vector3>
    fullName: Vim.Math3d.Transformable3D.RotateX<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateX``1(System.Single)
    name: RotateX(Of Vector3)
    nameWithType: Transformable3D.RotateX(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.RotateX(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateY``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateY<Vector3>(Single)
  nameWithType: Transformable3D.RotateY<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.RotateY<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.RotateY(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateY(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: RotateY(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateY``1(System.Single)
    name: RotateY<Vector3>
    nameWithType: Transformable3D.RotateY<Vector3>
    fullName: Vim.Math3d.Transformable3D.RotateY<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateY``1(System.Single)
    name: RotateY(Of Vector3)
    nameWithType: Transformable3D.RotateY(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.RotateY(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.RotateZ``1(System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  name: RotateZ<Vector3>(Single)
  nameWithType: Transformable3D.RotateZ<Vector3>(Single)
  fullName: Vim.Math3d.Transformable3D.RotateZ<Vim.Math3d.Vector3>(System.Single)
  nameWithType.vb: Transformable3D.RotateZ(Of Vector3)(Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateZ(Of Vim.Math3d.Vector3)(System.Single)
  name.vb: RotateZ(Of Vector3)(Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateZ``1(System.Single)
    name: RotateZ<Vector3>
    nameWithType: Transformable3D.RotateZ<Vector3>
    fullName: Vim.Math3d.Transformable3D.RotateZ<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateZ``1(System.Single)
    name: RotateZ(Of Vector3)
    nameWithType: Transformable3D.RotateZ(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.RotateZ(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  parent: Vim.Math3d.Transformable3D
  definition: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  name: TranslateRotateScale<Vector3>(Vector3, Quaternion, Vector3)
  nameWithType: Transformable3D.TranslateRotateScale<Vector3>(Vector3, Quaternion, Vector3)
  fullName: Vim.Math3d.Transformable3D.TranslateRotateScale<Vim.Math3d.Vector3>(Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.TranslateRotateScale(Of Vector3)(Vector3, Quaternion, Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.TranslateRotateScale(Of Vim.Math3d.Vector3)(Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  name.vb: TranslateRotateScale(Of Vector3)(Vector3, Quaternion, Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
    name: TranslateRotateScale<Vector3>
    nameWithType: Transformable3D.TranslateRotateScale<Vector3>
    fullName: Vim.Math3d.Transformable3D.TranslateRotateScale<Vim.Math3d.Vector3>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
    name: TranslateRotateScale(Of Vector3)
    nameWithType: Transformable3D.TranslateRotateScale(Of Vector3)
    fullName: Vim.Math3d.Transformable3D.TranslateRotateScale(Of Vim.Math3d.Vector3)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Add(Vector3)
  nameWithType: MathOps.Add(Vector3)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Subtract(Vector3)
  nameWithType: MathOps.Subtract(Vector3)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Multiply(Vector3)
  nameWithType: MathOps.Multiply(Vector3)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Divide(Vector3)
  nameWithType: MathOps.Divide(Vector3)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Negate
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  name: Negate()
  nameWithType: MathOps.Negate()
  fullName: Vim.Math3d.MathOps.Negate()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Negate
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Negate
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Lerp(Vector3, Single)
  nameWithType: MathOps.Lerp(Vector3, Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: InverseLerp(Vector3, Vector3)
  nameWithType: MathOps.InverseLerp(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: LerpPrecise(Vector3, Single)
  nameWithType: MathOps.LerpPrecise(Vector3, Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampLower(Vector3)
  nameWithType: MathOps.ClampLower(Vector3)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampUpper(Vector3)
  nameWithType: MathOps.ClampUpper(Vector3)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Clamp(Vector3, Vector3)
  nameWithType: MathOps.Clamp(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Average(Vector3)
  nameWithType: MathOps.Average(Vector3)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  name: Barycentric(Vector3, Vector3, Single, Single)
  nameWithType: MathOps.Barycentric(Vector3, Vector3, Single, Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: DistanceSquared(Vector3)
  nameWithType: MathOps.DistanceSquared(Vector3)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Distance(Vector3)
  nameWithType: MathOps.Distance(Vector3)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.LengthSquared
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  name: LengthSquared()
  nameWithType: MathOps.LengthSquared()
  fullName: Vim.Math3d.MathOps.LengthSquared()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LengthSquared
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LengthSquared
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Length
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  name: Length()
  nameWithType: MathOps.Length()
  fullName: Vim.Math3d.MathOps.Length()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Length
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Length
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Normalize
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  name: Normalize()
  nameWithType: MathOps.Normalize()
  fullName: Vim.Math3d.MathOps.Normalize()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Normalize
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Normalize
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.SafeNormalize
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  name: SafeNormalize()
  nameWithType: MathOps.SafeNormalize()
  fullName: Vim.Math3d.MathOps.SafeNormalize()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SafeNormalize
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SafeNormalize
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Dot(Vector3)
  nameWithType: MathOps.Dot(Vector3)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Min(Vector3)
  nameWithType: MathOps.Min(Vector3)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Max(Vector3)
  nameWithType: MathOps.Max(Vector3)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.SquareRoot
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  name: SquareRoot()
  nameWithType: MathOps.SquareRoot()
  fullName: Vim.Math3d.MathOps.SquareRoot()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SquareRoot
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SquareRoot
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Abs
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  name: Abs()
  nameWithType: MathOps.Abs()
  fullName: Vim.Math3d.MathOps.Abs()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Abs
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Abs
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Acos
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  name: Acos()
  nameWithType: MathOps.Acos()
  fullName: Vim.Math3d.MathOps.Acos()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Acos
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Acos
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Asin
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  name: Asin()
  nameWithType: MathOps.Asin()
  fullName: Vim.Math3d.MathOps.Asin()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Asin
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Asin
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Atan
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  name: Atan()
  nameWithType: MathOps.Atan()
  fullName: Vim.Math3d.MathOps.Atan()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Atan
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Atan
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cos
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  name: Cos()
  nameWithType: MathOps.Cos()
  fullName: Vim.Math3d.MathOps.Cos()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cos
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cos
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cosh
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  name: Cosh()
  nameWithType: MathOps.Cosh()
  fullName: Vim.Math3d.MathOps.Cosh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cosh
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cosh
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Exp
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  name: Exp()
  nameWithType: MathOps.Exp()
  fullName: Vim.Math3d.MathOps.Exp()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Exp
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Exp
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Log
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  name: Log()
  nameWithType: MathOps.Log()
  fullName: Vim.Math3d.MathOps.Log()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Log10
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  name: Log10()
  nameWithType: MathOps.Log10()
  fullName: Vim.Math3d.MathOps.Log10()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log10
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log10
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sin
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  name: Sin()
  nameWithType: MathOps.Sin()
  fullName: Vim.Math3d.MathOps.Sin()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sin
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sin
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sinh
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  name: Sinh()
  nameWithType: MathOps.Sinh()
  fullName: Vim.Math3d.MathOps.Sinh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sinh
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sinh
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sqrt
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  name: Sqrt()
  nameWithType: MathOps.Sqrt()
  fullName: Vim.Math3d.MathOps.Sqrt()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqrt
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqrt
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Tan
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  name: Tan()
  nameWithType: MathOps.Tan()
  fullName: Vim.Math3d.MathOps.Tan()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tan
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tan
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Tanh
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  name: Tanh()
  nameWithType: MathOps.Tanh()
  fullName: Vim.Math3d.MathOps.Tanh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tanh
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tanh
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Inverse
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  name: Inverse()
  nameWithType: MathOps.Inverse()
  fullName: Vim.Math3d.MathOps.Inverse()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Inverse
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Inverse
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Ceiling
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  name: Ceiling()
  nameWithType: MathOps.Ceiling()
  fullName: Vim.Math3d.MathOps.Ceiling()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Ceiling
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Ceiling
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Floor
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  name: Floor()
  nameWithType: MathOps.Floor()
  fullName: Vim.Math3d.MathOps.Floor()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Floor
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Floor
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Round
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  name: Round()
  nameWithType: MathOps.Round()
  fullName: Vim.Math3d.MathOps.Round()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Round
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Round
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Truncate
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  name: Truncate()
  nameWithType: MathOps.Truncate()
  fullName: Vim.Math3d.MathOps.Truncate()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Truncate
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Truncate
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Sqr
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  name: Sqr()
  nameWithType: MathOps.Sqr()
  fullName: Vim.Math3d.MathOps.Sqr()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqr
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqr
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Cube
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  name: Cube()
  nameWithType: MathOps.Cube()
  fullName: Vim.Math3d.MathOps.Cube()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cube
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cube
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToRadians
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  name: ToRadians()
  nameWithType: MathOps.ToRadians()
  fullName: Vim.Math3d.MathOps.ToRadians()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToRadians
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToRadians
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToDegrees
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  name: ToDegrees()
  nameWithType: MathOps.ToDegrees()
  fullName: Vim.Math3d.MathOps.ToDegrees()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToDegrees
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToDegrees
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToVector2
  commentId: M:Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  name: ToVector2()
  nameWithType: MathOps.ToVector2()
  fullName: Vim.Math3d.MathOps.ToVector2()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToVector2
    name: ToVector2
    nameWithType: MathOps.ToVector2
    fullName: Vim.Math3d.MathOps.ToVector2
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToVector2
    name: ToVector2
    nameWithType: MathOps.ToVector2
    fullName: Vim.Math3d.MathOps.ToVector2
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToVector4
  commentId: M:Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  name: ToVector4()
  nameWithType: MathOps.ToVector4()
  fullName: Vim.Math3d.MathOps.ToVector4()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToVector4
    name: ToVector4
    nameWithType: MathOps.ToVector4
    fullName: Vim.Math3d.MathOps.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToVector4
    name: ToVector4
    nameWithType: MathOps.ToVector4
    fullName: Vim.Math3d.MathOps.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Rotate(Vector3, Single)
  nameWithType: MathOps.Rotate(Vector3, Single)
  fullName: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,System.Single)
    name: Rotate
    nameWithType: MathOps.Rotate
    fullName: Vim.Math3d.MathOps.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,System.Single)
    name: Rotate
    nameWithType: MathOps.Rotate
    fullName: Vim.Math3d.MathOps.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsNonZeroAndValid
  commentId: M:Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  name: IsNonZeroAndValid()
  nameWithType: MathOps.IsNonZeroAndValid()
  fullName: Vim.Math3d.MathOps.IsNonZeroAndValid()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsNonZeroAndValid
    name: IsNonZeroAndValid
    nameWithType: MathOps.IsNonZeroAndValid
    fullName: Vim.Math3d.MathOps.IsNonZeroAndValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsNonZeroAndValid
    name: IsNonZeroAndValid
    nameWithType: MathOps.IsNonZeroAndValid
    fullName: Vim.Math3d.MathOps.IsNonZeroAndValid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsZeroOrInvalid
  commentId: M:Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  name: IsZeroOrInvalid()
  nameWithType: MathOps.IsZeroOrInvalid()
  fullName: Vim.Math3d.MathOps.IsZeroOrInvalid()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsZeroOrInvalid
    name: IsZeroOrInvalid
    nameWithType: MathOps.IsZeroOrInvalid
    fullName: Vim.Math3d.MathOps.IsZeroOrInvalid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsZeroOrInvalid
    name: IsZeroOrInvalid
    nameWithType: MathOps.IsZeroOrInvalid
    fullName: Vim.Math3d.MathOps.IsZeroOrInvalid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: IsPerpendicular(Vector3, Single)
  nameWithType: MathOps.IsPerpendicular(Vector3, Single)
  fullName: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,System.Single)
    name: IsPerpendicular
    nameWithType: MathOps.IsPerpendicular
    fullName: Vim.Math3d.MathOps.IsPerpendicular
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,System.Single)
    name: IsPerpendicular
    nameWithType: MathOps.IsPerpendicular
    fullName: Vim.Math3d.MathOps.IsPerpendicular
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Projection(Vector3)
  nameWithType: MathOps.Projection(Vector3)
  fullName: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3)
    name: Projection
    nameWithType: MathOps.Projection
    fullName: Vim.Math3d.MathOps.Projection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3)
    name: Projection
    nameWithType: MathOps.Projection
    fullName: Vim.Math3d.MathOps.Projection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Rejection(Vector3)
  nameWithType: MathOps.Rejection(Vector3)
  fullName: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3)
    name: Rejection
    nameWithType: MathOps.Rejection
    fullName: Vim.Math3d.MathOps.Rejection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3)
    name: Rejection
    nameWithType: MathOps.Rejection
    fullName: Vim.Math3d.MathOps.Rejection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: SignedAngle(Vector3)
  nameWithType: MathOps.SignedAngle(Vector3)
  fullName: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3)
    name: SignedAngle
    nameWithType: MathOps.SignedAngle
    fullName: Vim.Math3d.MathOps.SignedAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3)
    name: SignedAngle
    nameWithType: MathOps.SignedAngle
    fullName: Vim.Math3d.MathOps.SignedAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Angle(Vector3, Single)
  nameWithType: MathOps.Angle(Vector3, Single)
  fullName: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,System.Single)
    name: Angle
    nameWithType: MathOps.Angle
    fullName: Vim.Math3d.MathOps.Angle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,System.Single)
    name: Angle
    nameWithType: MathOps.Angle
    fullName: Vim.Math3d.MathOps.Angle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Colinear(Vector3, Single)
  nameWithType: MathOps.Colinear(Vector3, Single)
  fullName: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,System.Single)
    name: Colinear
    nameWithType: MathOps.Colinear
    fullName: Vim.Math3d.MathOps.Colinear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,System.Single)
    name: Colinear
    nameWithType: MathOps.Colinear
    fullName: Vim.Math3d.MathOps.Colinear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: IsBackFace(Vector3)
  nameWithType: MathOps.IsBackFace(Vector3)
  fullName: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3)
    name: IsBackFace
    nameWithType: MathOps.IsBackFace
    fullName: Vim.Math3d.MathOps.IsBackFace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3)
    name: IsBackFace
    nameWithType: MathOps.IsBackFace
    fullName: Vim.Math3d.MathOps.IsBackFace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: CatmullRom(Vector3, Vector3, Vector3, Single)
  nameWithType: MathOps.CatmullRom(Vector3, Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: CatmullRom
    nameWithType: MathOps.CatmullRom
    fullName: Vim.Math3d.MathOps.CatmullRom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: CatmullRom
    nameWithType: MathOps.CatmullRom
    fullName: Vim.Math3d.MathOps.CatmullRom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: Hermite(Vector3, Vector3, Vector3, Single)
  nameWithType: MathOps.Hermite(Vector3, Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Hermite
    nameWithType: MathOps.Hermite
    fullName: Vim.Math3d.MathOps.Hermite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Hermite
    nameWithType: MathOps.Hermite
    fullName: Vim.Math3d.MathOps.Hermite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  name: SmoothStep(Vector3, Single)
  nameWithType: MathOps.SmoothStep(Vector3, Single)
  fullName: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,System.Single)
    name: SmoothStep
    nameWithType: MathOps.SmoothStep
    fullName: Vim.Math3d.MathOps.SmoothStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,System.Single)
    name: SmoothStep
    nameWithType: MathOps.SmoothStep
    fullName: Vim.Math3d.MathOps.SmoothStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToLine
  commentId: M:Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  name: ToLine()
  nameWithType: MathOps.ToLine()
  fullName: Vim.Math3d.MathOps.ToLine()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToLine
    name: ToLine
    nameWithType: MathOps.ToLine
    fullName: Vim.Math3d.MathOps.ToLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToLine
    name: ToLine
    nameWithType: MathOps.ToLine
    fullName: Vim.Math3d.MathOps.ToLine
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Along(System.Single)
  commentId: M:Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  name: Along(Single)
  nameWithType: MathOps.Along(Single)
  fullName: Vim.Math3d.MathOps.Along(System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Along(System.Single)
    name: Along
    nameWithType: MathOps.Along
    fullName: Vim.Math3d.MathOps.Along
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Along(System.Single)
    name: Along
    nameWithType: MathOps.Along
    fullName: Vim.Math3d.MathOps.Along
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.Transform(Vim.Math3d.Quaternion)
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: Transform(Quaternion)
  nameWithType: MathOps.Transform(Quaternion)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Quaternion)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Quaternion)
    name: Transform
    nameWithType: MathOps.Transform
    fullName: Vim.Math3d.MathOps.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Quaternion)
    name: Transform
    nameWithType: MathOps.Transform
    fullName: Vim.Math3d.MathOps.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Vim.Math3d.MathOps.ToMatrix
  commentId: M:Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  name: ToMatrix()
  nameWithType: MathOps.ToMatrix()
  fullName: Vim.Math3d.MathOps.ToMatrix()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToMatrix
    name: ToMatrix
    nameWithType: MathOps.ToMatrix
    fullName: Vim.Math3d.MathOps.ToMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToMatrix
    name: ToMatrix
    nameWithType: MathOps.ToMatrix
    fullName: Vim.Math3d.MathOps.ToMatrix
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ITransformable3D`1
  commentId: T:Vim.Math3d.ITransformable3D`1
  name: ITransformable3D<TSelf>
  nameWithType: ITransformable3D<TSelf>
  fullName: Vim.Math3d.ITransformable3D<TSelf>
  nameWithType.vb: ITransformable3D(Of TSelf)
  fullName.vb: Vim.Math3d.ITransformable3D(Of TSelf)
  name.vb: ITransformable3D(Of TSelf)
  spec.csharp:
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: TSelf
    nameWithType: TSelf
    fullName: TSelf
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TSelf
    nameWithType: TSelf
    fullName: TSelf
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  commentId: M:Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
  name: Transform<T>(ITransformable3D<T>, Matrix4x4[])
  nameWithType: Transformable3D.Transform<T>(ITransformable3D<T>, Matrix4x4[])
  fullName: Vim.Math3d.Transformable3D.Transform<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Matrix4x4[])
  nameWithType.vb: Transformable3D.Transform(Of T)(ITransformable3D(Of T), Matrix4x4())
  fullName.vb: Vim.Math3d.Transformable3D.Transform(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Matrix4x4())
  name.vb: Transform(Of T)(ITransformable3D(Of T), Matrix4x4())
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
    name: Transform<T>
    nameWithType: Transformable3D.Transform<T>
    fullName: Vim.Math3d.Transformable3D.Transform<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Transform``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Matrix4x4[])
    name: Transform(Of T)
    nameWithType: Transformable3D.Transform(Of T)
    fullName: Vim.Math3d.Transformable3D.Transform(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D
  commentId: T:Vim.Math3d.Transformable3D
  parent: Vim.Math3d
  name: Transformable3D
  nameWithType: Transformable3D
  fullName: Vim.Math3d.Transformable3D
- uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Translate<T>(ITransformable3D<T>, Vector3)
  nameWithType: Transformable3D.Translate<T>(ITransformable3D<T>, Vector3)
  fullName: Vim.Math3d.Transformable3D.Translate<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.Translate(Of T)(ITransformable3D(Of T), Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3)
  name.vb: Translate(Of T)(ITransformable3D(Of T), Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
    name: Translate<T>
    nameWithType: Transformable3D.Translate<T>
    fullName: Vim.Math3d.Transformable3D.Translate<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
    name: Translate(Of T)
    nameWithType: Transformable3D.Translate(Of T)
    fullName: Vim.Math3d.Transformable3D.Translate(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  isExternal: true
  name: Translate<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType: Transformable3D.Translate<T>(ITransformable3D<T>, Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Translate<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Translate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Translate(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  name.vb: Translate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Translate<T>
    nameWithType: Transformable3D.Translate<T>
    fullName: Vim.Math3d.Transformable3D.Translate<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Translate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Translate(Of T)
    nameWithType: Transformable3D.Translate(Of T)
    fullName: Vim.Math3d.Transformable3D.Translate(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
  name: Rotate<T>(ITransformable3D<T>, Quaternion)
  nameWithType: Transformable3D.Rotate<T>(ITransformable3D<T>, Quaternion)
  fullName: Vim.Math3d.Transformable3D.Rotate<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Quaternion)
  nameWithType.vb: Transformable3D.Rotate(Of T)(ITransformable3D(Of T), Quaternion)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Quaternion)
  name.vb: Rotate(Of T)(ITransformable3D(Of T), Quaternion)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
    name: Rotate<T>
    nameWithType: Transformable3D.Rotate<T>
    fullName: Vim.Math3d.Transformable3D.Rotate<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Quaternion)
    name: Rotate(Of T)
    nameWithType: Transformable3D.Rotate(Of T)
    fullName: Vim.Math3d.Transformable3D.Rotate(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: Scale<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: Scale<T>
    nameWithType: Transformable3D.Scale<T>
    fullName: Vim.Math3d.Transformable3D.Scale<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: Scale(Of T)
    nameWithType: Transformable3D.Scale(Of T)
    fullName: Vim.Math3d.Transformable3D.Scale(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
  name: Scale<T>(ITransformable3D<T>, Vector3)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Vector3)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
    name: Scale<T>
    nameWithType: Transformable3D.Scale<T>
    fullName: Vim.Math3d.Transformable3D.Scale<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3)
    name: Scale(Of T)
    nameWithType: Transformable3D.Scale(Of T)
    fullName: Vim.Math3d.Transformable3D.Scale(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  isExternal: true
  name: Scale<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType: Transformable3D.Scale<T>(ITransformable3D<T>, Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Scale<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Scale(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Scale(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  name.vb: Scale(Of T)(ITransformable3D(Of T), Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Scale<T>
    nameWithType: Transformable3D.Scale<T>
    fullName: Vim.Math3d.Transformable3D.Scale<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Scale``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Scale(Of T)
    nameWithType: Transformable3D.Scale(Of T)
    fullName: Vim.Math3d.Transformable3D.Scale(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: ScaleX<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.ScaleX<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.ScaleX<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.ScaleX(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleX(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: ScaleX(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleX<T>
    nameWithType: Transformable3D.ScaleX<T>
    fullName: Vim.Math3d.Transformable3D.ScaleX<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleX(Of T)
    nameWithType: Transformable3D.ScaleX(Of T)
    fullName: Vim.Math3d.Transformable3D.ScaleX(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: ScaleY<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.ScaleY<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.ScaleY<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.ScaleY(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleY(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: ScaleY(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleY<T>
    nameWithType: Transformable3D.ScaleY<T>
    fullName: Vim.Math3d.Transformable3D.ScaleY<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleY(Of T)
    nameWithType: Transformable3D.ScaleY(Of T)
    fullName: Vim.Math3d.Transformable3D.ScaleY(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: ScaleZ<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.ScaleZ<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.ScaleZ<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.ScaleZ(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.ScaleZ(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: ScaleZ(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleZ<T>
    nameWithType: Transformable3D.ScaleZ<T>
    fullName: Vim.Math3d.Transformable3D.ScaleZ<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.ScaleZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: ScaleZ(Of T)
    nameWithType: Transformable3D.ScaleZ(Of T)
    fullName: Vim.Math3d.Transformable3D.ScaleZ(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: LookAt<T>(ITransformable3D<T>, Vector3, Vector3, Vector3)
  nameWithType: Transformable3D.LookAt<T>(ITransformable3D<T>, Vector3, Vector3, Vector3)
  fullName: Vim.Math3d.Transformable3D.LookAt<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.LookAt(Of T)(ITransformable3D(Of T), Vector3, Vector3, Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.LookAt(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  name.vb: LookAt(Of T)(ITransformable3D(Of T), Vector3, Vector3, Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: LookAt<T>
    nameWithType: Transformable3D.LookAt<T>
    fullName: Vim.Math3d.Transformable3D.LookAt<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.LookAt``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: LookAt(Of T)
    nameWithType: Transformable3D.LookAt(Of T)
    fullName: Vim.Math3d.Transformable3D.LookAt(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: RotateAround<T>(ITransformable3D<T>, Vector3, Single)
  nameWithType: Transformable3D.RotateAround<T>(ITransformable3D<T>, Vector3, Single)
  fullName: Vim.Math3d.Transformable3D.RotateAround<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, System.Single)
  nameWithType.vb: Transformable3D.RotateAround(Of T)(ITransformable3D(Of T), Vector3, Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateAround(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, System.Single)
  name.vb: RotateAround(Of T)(ITransformable3D(Of T), Vector3, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
    name: RotateAround<T>
    nameWithType: Transformable3D.RotateAround<T>
    fullName: Vim.Math3d.Transformable3D.RotateAround<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateAround``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,System.Single)
    name: RotateAround(Of T)
    nameWithType: Transformable3D.RotateAround(Of T)
    fullName: Vim.Math3d.Transformable3D.RotateAround(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
  isExternal: true
  name: Rotate<T>(ITransformable3D<T>, Single, Single, Single)
  nameWithType: Transformable3D.Rotate<T>(ITransformable3D<T>, Single, Single, Single)
  fullName: Vim.Math3d.Transformable3D.Rotate<T>(Vim.Math3d.ITransformable3D<T>, System.Single, System.Single, System.Single)
  nameWithType.vb: Transformable3D.Rotate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  fullName.vb: Vim.Math3d.Transformable3D.Rotate(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single, System.Single, System.Single)
  name.vb: Rotate(Of T)(ITransformable3D(Of T), Single, Single, Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Rotate<T>
    nameWithType: Transformable3D.Rotate<T>
    fullName: Vim.Math3d.Transformable3D.Rotate<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Rotate``1(Vim.Math3d.ITransformable3D{``0},System.Single,System.Single,System.Single)
    name: Rotate(Of T)
    nameWithType: Transformable3D.Rotate(Of T)
    fullName: Vim.Math3d.Transformable3D.Rotate(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  commentId: M:Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
  name: Reflect<T>(ITransformable3D<T>, Plane)
  nameWithType: Transformable3D.Reflect<T>(ITransformable3D<T>, Plane)
  fullName: Vim.Math3d.Transformable3D.Reflect<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Plane)
  nameWithType.vb: Transformable3D.Reflect(Of T)(ITransformable3D(Of T), Plane)
  fullName.vb: Vim.Math3d.Transformable3D.Reflect(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Plane)
  name.vb: Reflect(Of T)(ITransformable3D(Of T), Plane)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
    name: Reflect<T>
    nameWithType: Transformable3D.Reflect<T>
    fullName: Vim.Math3d.Transformable3D.Reflect<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Plane
    name: Plane
    nameWithType: Plane
    fullName: Vim.Math3d.Plane
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.Reflect``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Plane)
    name: Reflect(Of T)
    nameWithType: Transformable3D.Reflect(Of T)
    fullName: Vim.Math3d.Transformable3D.Reflect(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Plane
    name: Plane
    nameWithType: Plane
    fullName: Vim.Math3d.Plane
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: RotateX<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.RotateX<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.RotateX<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.RotateX(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateX(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: RotateX(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateX<T>
    nameWithType: Transformable3D.RotateX<T>
    fullName: Vim.Math3d.Transformable3D.RotateX<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateX``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateX(Of T)
    nameWithType: Transformable3D.RotateX(Of T)
    fullName: Vim.Math3d.Transformable3D.RotateX(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: RotateY<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.RotateY<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.RotateY<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.RotateY(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateY(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: RotateY(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateY<T>
    nameWithType: Transformable3D.RotateY<T>
    fullName: Vim.Math3d.Transformable3D.RotateY<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateY``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateY(Of T)
    nameWithType: Transformable3D.RotateY(Of T)
    fullName: Vim.Math3d.Transformable3D.RotateY(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  commentId: M:Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
  isExternal: true
  name: RotateZ<T>(ITransformable3D<T>, Single)
  nameWithType: Transformable3D.RotateZ<T>(ITransformable3D<T>, Single)
  fullName: Vim.Math3d.Transformable3D.RotateZ<T>(Vim.Math3d.ITransformable3D<T>, System.Single)
  nameWithType.vb: Transformable3D.RotateZ(Of T)(ITransformable3D(Of T), Single)
  fullName.vb: Vim.Math3d.Transformable3D.RotateZ(Of T)(Vim.Math3d.ITransformable3D(Of T), System.Single)
  name.vb: RotateZ(Of T)(ITransformable3D(Of T), Single)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateZ<T>
    nameWithType: Transformable3D.RotateZ<T>
    fullName: Vim.Math3d.Transformable3D.RotateZ<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.RotateZ``1(Vim.Math3d.ITransformable3D{``0},System.Single)
    name: RotateZ(Of T)
    nameWithType: Transformable3D.RotateZ(Of T)
    fullName: Vim.Math3d.Transformable3D.RotateZ(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
  name: TranslateRotateScale<T>(ITransformable3D<T>, Vector3, Quaternion, Vector3)
  nameWithType: Transformable3D.TranslateRotateScale<T>(ITransformable3D<T>, Vector3, Quaternion, Vector3)
  fullName: Vim.Math3d.Transformable3D.TranslateRotateScale<T>(Vim.Math3d.ITransformable3D<T>, Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  nameWithType.vb: Transformable3D.TranslateRotateScale(Of T)(ITransformable3D(Of T), Vector3, Quaternion, Vector3)
  fullName.vb: Vim.Math3d.Transformable3D.TranslateRotateScale(Of T)(Vim.Math3d.ITransformable3D(Of T), Vim.Math3d.Vector3, Vim.Math3d.Quaternion, Vim.Math3d.Vector3)
  name.vb: TranslateRotateScale(Of T)(ITransformable3D(Of T), Vector3, Quaternion, Vector3)
  spec.csharp:
  - uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
    name: TranslateRotateScale<T>
    nameWithType: Transformable3D.TranslateRotateScale<T>
    fullName: Vim.Math3d.Transformable3D.TranslateRotateScale<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.Transformable3D.TranslateRotateScale``1(Vim.Math3d.ITransformable3D{``0},Vim.Math3d.Vector3,Vim.Math3d.Quaternion,Vim.Math3d.Vector3)
    name: TranslateRotateScale(Of T)
    nameWithType: Transformable3D.TranslateRotateScale(Of T)
    fullName: Vim.Math3d.Transformable3D.TranslateRotateScale(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ITransformable3D`1
    name: ITransformable3D
    nameWithType: ITransformable3D
    fullName: Vim.Math3d.ITransformable3D
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Add(Vector3, Vector3)
  nameWithType: MathOps.Add(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps
  commentId: T:Vim.Math3d.MathOps
  parent: Vim.Math3d
  name: MathOps
  nameWithType: MathOps
  fullName: Vim.Math3d.MathOps
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Subtract(Vector3, Vector3)
  nameWithType: MathOps.Subtract(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Multiply(Vector3, Vector3)
  nameWithType: MathOps.Multiply(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Divide(Vector3, Vector3)
  nameWithType: MathOps.Divide(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  name: Negate(Vector3)
  nameWithType: MathOps.Negate(Vector3)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.Vector3)
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Lerp(Vector3, Vector3, Single)
  nameWithType: MathOps.Lerp(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: InverseLerp(Vector3, Vector3, Vector3)
  nameWithType: MathOps.InverseLerp(Vector3, Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: LerpPrecise(Vector3, Vector3, Single)
  nameWithType: MathOps.LerpPrecise(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampLower(Vector3, Vector3)
  nameWithType: MathOps.ClampLower(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: ClampUpper(Vector3, Vector3)
  nameWithType: MathOps.ClampUpper(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Clamp(Vector3, Vector3, Vector3)
  nameWithType: MathOps.Clamp(Vector3, Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Average(Vector3, Vector3)
  nameWithType: MathOps.Average(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
  isExternal: true
  name: Barycentric(Vector3, Vector3, Vector3, Single, Single)
  nameWithType: MathOps.Barycentric(Vector3, Vector3, Vector3, Single, Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: DistanceSquared(Vector3, Vector3)
  nameWithType: MathOps.DistanceSquared(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Distance(Vector3, Vector3)
  nameWithType: MathOps.Distance(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  name: LengthSquared(Vector3)
  nameWithType: MathOps.LengthSquared(Vector3)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.Vector3)
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  name: Length(Vector3)
  nameWithType: MathOps.Length(Vector3)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Length(Vim.Math3d.Vector3)
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  name: Normalize(Vector3)
  nameWithType: MathOps.Normalize(Vector3)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.Vector3)
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  name: SafeNormalize(Vector3)
  nameWithType: MathOps.SafeNormalize(Vector3)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.Vector3)
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Dot(Vector3, Vector3)
  nameWithType: MathOps.Dot(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Min(Vector3, Vector3)
  nameWithType: MathOps.Min(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Max(Vector3, Vector3)
  nameWithType: MathOps.Max(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  name: SquareRoot(Vector3)
  nameWithType: MathOps.SquareRoot(Vector3)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.Vector3)
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  name: Abs(Vector3)
  nameWithType: MathOps.Abs(Vector3)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.Vector3)
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  name: Acos(Vector3)
  nameWithType: MathOps.Acos(Vector3)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.Vector3)
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  name: Asin(Vector3)
  nameWithType: MathOps.Asin(Vector3)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.Vector3)
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  name: Atan(Vector3)
  nameWithType: MathOps.Atan(Vector3)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.Vector3)
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  name: Cos(Vector3)
  nameWithType: MathOps.Cos(Vector3)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.Vector3)
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  name: Cosh(Vector3)
  nameWithType: MathOps.Cosh(Vector3)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.Vector3)
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  name: Exp(Vector3)
  nameWithType: MathOps.Exp(Vector3)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.Vector3)
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  name: Log(Vector3)
  nameWithType: MathOps.Log(Vector3)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log(Vim.Math3d.Vector3)
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  name: Log10(Vector3)
  nameWithType: MathOps.Log10(Vector3)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.Vector3)
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  name: Sin(Vector3)
  nameWithType: MathOps.Sin(Vector3)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.Vector3)
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  name: Sinh(Vector3)
  nameWithType: MathOps.Sinh(Vector3)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.Vector3)
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  name: Sqrt(Vector3)
  nameWithType: MathOps.Sqrt(Vector3)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.Vector3)
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  name: Tan(Vector3)
  nameWithType: MathOps.Tan(Vector3)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.Vector3)
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  name: Tanh(Vector3)
  nameWithType: MathOps.Tanh(Vector3)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.Vector3)
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  name: Inverse(Vector3)
  nameWithType: MathOps.Inverse(Vector3)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.Vector3)
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  name: Ceiling(Vector3)
  nameWithType: MathOps.Ceiling(Vector3)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.Vector3)
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  name: Floor(Vector3)
  nameWithType: MathOps.Floor(Vector3)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.Vector3)
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  name: Round(Vector3)
  nameWithType: MathOps.Round(Vector3)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Round(Vim.Math3d.Vector3)
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  name: Truncate(Vector3)
  nameWithType: MathOps.Truncate(Vector3)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.Vector3)
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  name: Sqr(Vector3)
  nameWithType: MathOps.Sqr(Vector3)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.Vector3)
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  name: Cube(Vector3)
  nameWithType: MathOps.Cube(Vector3)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.Vector3)
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  name: ToRadians(Vector3)
  nameWithType: MathOps.ToRadians(Vector3)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.Vector3)
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  name: ToDegrees(Vector3)
  nameWithType: MathOps.ToDegrees(Vector3)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.Vector3)
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  name: ToVector2(Vector3)
  nameWithType: MathOps.ToVector2(Vector3)
  fullName: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
    name: ToVector2
    nameWithType: MathOps.ToVector2
    fullName: Vim.Math3d.MathOps.ToVector2
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToVector2(Vim.Math3d.Vector3)
    name: ToVector2
    nameWithType: MathOps.ToVector2
    fullName: Vim.Math3d.MathOps.ToVector2
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  name: ToVector4(Vector3)
  nameWithType: MathOps.ToVector4(Vector3)
  fullName: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
    name: ToVector4
    nameWithType: MathOps.ToVector4
    fullName: Vim.Math3d.MathOps.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToVector4(Vim.Math3d.Vector3)
    name: ToVector4
    nameWithType: MathOps.ToVector4
    fullName: Vim.Math3d.MathOps.ToVector4
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Rotate(Vector3, Vector3, Single)
  nameWithType: MathOps.Rotate(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Rotate
    nameWithType: MathOps.Rotate
    fullName: Vim.Math3d.MathOps.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Rotate(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Rotate
    nameWithType: MathOps.Rotate
    fullName: Vim.Math3d.MathOps.Rotate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  name: IsNonZeroAndValid(Vector3)
  nameWithType: MathOps.IsNonZeroAndValid(Vector3)
  fullName: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
    name: IsNonZeroAndValid
    nameWithType: MathOps.IsNonZeroAndValid
    fullName: Vim.Math3d.MathOps.IsNonZeroAndValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsNonZeroAndValid(Vim.Math3d.Vector3)
    name: IsNonZeroAndValid
    nameWithType: MathOps.IsNonZeroAndValid
    fullName: Vim.Math3d.MathOps.IsNonZeroAndValid
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  name: IsZeroOrInvalid(Vector3)
  nameWithType: MathOps.IsZeroOrInvalid(Vector3)
  fullName: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
    name: IsZeroOrInvalid
    nameWithType: MathOps.IsZeroOrInvalid
    fullName: Vim.Math3d.MathOps.IsZeroOrInvalid
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsZeroOrInvalid(Vim.Math3d.Vector3)
    name: IsZeroOrInvalid
    nameWithType: MathOps.IsZeroOrInvalid
    fullName: Vim.Math3d.MathOps.IsZeroOrInvalid
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: IsPerpendicular(Vector3, Vector3, Single)
  nameWithType: MathOps.IsPerpendicular(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: IsPerpendicular
    nameWithType: MathOps.IsPerpendicular
    fullName: Vim.Math3d.MathOps.IsPerpendicular
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsPerpendicular(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: IsPerpendicular
    nameWithType: MathOps.IsPerpendicular
    fullName: Vim.Math3d.MathOps.IsPerpendicular
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Projection(Vector3, Vector3)
  nameWithType: MathOps.Projection(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Projection
    nameWithType: MathOps.Projection
    fullName: Vim.Math3d.MathOps.Projection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Projection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Projection
    nameWithType: MathOps.Projection
    fullName: Vim.Math3d.MathOps.Projection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: Rejection(Vector3, Vector3)
  nameWithType: MathOps.Rejection(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Rejection
    nameWithType: MathOps.Rejection
    fullName: Vim.Math3d.MathOps.Rejection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Rejection(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: Rejection
    nameWithType: MathOps.Rejection
    fullName: Vim.Math3d.MathOps.Rejection
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: SignedAngle(Vector3, Vector3)
  nameWithType: MathOps.SignedAngle(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: SignedAngle
    nameWithType: MathOps.SignedAngle
    fullName: Vim.Math3d.MathOps.SignedAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SignedAngle(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: SignedAngle
    nameWithType: MathOps.SignedAngle
    fullName: Vim.Math3d.MathOps.SignedAngle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Angle(Vector3, Vector3, Single)
  nameWithType: MathOps.Angle(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Angle
    nameWithType: MathOps.Angle
    fullName: Vim.Math3d.MathOps.Angle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Angle(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Angle
    nameWithType: MathOps.Angle
    fullName: Vim.Math3d.MathOps.Angle
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Colinear(Vector3, Vector3, Single)
  nameWithType: MathOps.Colinear(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Colinear
    nameWithType: MathOps.Colinear
    fullName: Vim.Math3d.MathOps.Colinear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Colinear(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Colinear
    nameWithType: MathOps.Colinear
    fullName: Vim.Math3d.MathOps.Colinear
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
  name: IsBackFace(Vector3, Vector3)
  nameWithType: MathOps.IsBackFace(Vector3, Vector3)
  fullName: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3, Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: IsBackFace
    nameWithType: MathOps.IsBackFace
    fullName: Vim.Math3d.MathOps.IsBackFace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.IsBackFace(Vim.Math3d.Vector3,Vim.Math3d.Vector3)
    name: IsBackFace
    nameWithType: MathOps.IsBackFace
    fullName: Vim.Math3d.MathOps.IsBackFace
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: MathOps.CatmullRom(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: CatmullRom
    nameWithType: MathOps.CatmullRom
    fullName: Vim.Math3d.MathOps.CatmullRom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.CatmullRom(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: CatmullRom
    nameWithType: MathOps.CatmullRom
    fullName: Vim.Math3d.MathOps.CatmullRom
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Hermite(Vector3, Vector3, Vector3, Vector3, Single)
  nameWithType: MathOps.Hermite(Vector3, Vector3, Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Hermite
    nameWithType: MathOps.Hermite
    fullName: Vim.Math3d.MathOps.Hermite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Hermite(Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: Hermite
    nameWithType: MathOps.Hermite
    fullName: Vim.Math3d.MathOps.Hermite
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: SmoothStep(Vector3, Vector3, Single)
  nameWithType: MathOps.SmoothStep(Vector3, Vector3, Single)
  fullName: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3, Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: SmoothStep
    nameWithType: MathOps.SmoothStep
    fullName: Vim.Math3d.MathOps.SmoothStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SmoothStep(Vim.Math3d.Vector3,Vim.Math3d.Vector3,System.Single)
    name: SmoothStep
    nameWithType: MathOps.SmoothStep
    fullName: Vim.Math3d.MathOps.SmoothStep
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  name: ToLine(Vector3)
  nameWithType: MathOps.ToLine(Vector3)
  fullName: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
    name: ToLine
    nameWithType: MathOps.ToLine
    fullName: Vim.Math3d.MathOps.ToLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToLine(Vim.Math3d.Vector3)
    name: ToLine
    nameWithType: MathOps.ToLine
    fullName: Vim.Math3d.MathOps.ToLine
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  commentId: M:Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
  isExternal: true
  name: Along(Vector3, Single)
  nameWithType: MathOps.Along(Vector3, Single)
  fullName: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
    name: Along
    nameWithType: MathOps.Along
    fullName: Vim.Math3d.MathOps.Along
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Along(Vim.Math3d.Vector3,System.Single)
    name: Along
    nameWithType: MathOps.Along
    fullName: Vim.Math3d.MathOps.Along
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  commentId: M:Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
  name: Transform(Vector3, Quaternion)
  nameWithType: MathOps.Transform(Vector3, Quaternion)
  fullName: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3, Vim.Math3d.Quaternion)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
    name: Transform
    nameWithType: MathOps.Transform
    fullName: Vim.Math3d.MathOps.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Transform(Vim.Math3d.Vector3,Vim.Math3d.Quaternion)
    name: Transform
    nameWithType: MathOps.Transform
    fullName: Vim.Math3d.MathOps.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Vim.Math3d.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  commentId: M:Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  name: ToMatrix(Vector3)
  nameWithType: MathOps.ToMatrix(Vector3)
  fullName: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
    name: ToMatrix
    nameWithType: MathOps.ToMatrix
    fullName: Vim.Math3d.MathOps.ToMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToMatrix(Vim.Math3d.Vector3)
    name: ToMatrix
    nameWithType: MathOps.ToMatrix
    fullName: Vim.Math3d.MathOps.ToMatrix
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Vim.Math3d.Vector3.#ctor*
  commentId: Overload:Vim.Math3d.Vector3.#ctor
  name: Vector3
  nameWithType: Vector3.Vector3
  fullName: Vim.Math3d.Vector3.Vector3
- uid: System.ValueTuple{System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`3
  name: (T1, T2, T3)<Single, Single, Single>
  nameWithType: (T1, T2, T3)<Single, Single, Single>
  fullName: System.ValueTuple<System.Single, System.Single, System.Single>
  nameWithType.vb: (T1, T2, T3)(Of Single, Single, Single)
  fullName.vb: System.ValueTuple(Of System.Single, System.Single, System.Single)
  name.vb: (T1, T2, T3)(Of Single, Single, Single)
  spec.csharp:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  isExternal: true
  name: (T1, T2, T3)<T1, T2, T3>
  nameWithType: (T1, T2, T3)<T1, T2, T3>
  fullName: System.ValueTuple<T1, T2, T3>
  nameWithType.vb: (T1, T2, T3)(Of T1, T2, T3)
  fullName.vb: System.ValueTuple(Of T1, T2, T3)
  name.vb: (T1, T2, T3)(Of T1, T2, T3)
  spec.csharp:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`3
    name: (T1, T2, T3)
    nameWithType: (T1, T2, T3)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Create*
  commentId: Overload:Vim.Math3d.Vector3.Create
  name: Create
  nameWithType: Vector3.Create
  fullName: Vim.Math3d.Vector3.Create
- uid: Vim.Math3d.Vector3
  commentId: T:Vim.Math3d.Vector3
  parent: Vim.Math3d
  name: Vector3
  nameWithType: Vector3
  fullName: Vim.Math3d.Vector3
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Equals*
  commentId: Overload:Vim.Math3d.Vector3.Equals
  name: Equals
  nameWithType: Vector3.Equals
  fullName: Vim.Math3d.Vector3.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.GetHashCode*
  commentId: Overload:Vim.Math3d.Vector3.GetHashCode
  name: GetHashCode
  nameWithType: Vector3.GetHashCode
  fullName: Vim.Math3d.Vector3.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.ToString*
  commentId: Overload:Vim.Math3d.Vector3.ToString
  name: ToString
  nameWithType: Vector3.ToString
  fullName: Vim.Math3d.Vector3.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vim.Math3d.Vector3.Deconstruct*
  commentId: Overload:Vim.Math3d.Vector3.Deconstruct
  name: Deconstruct
  nameWithType: Vector3.Deconstruct
  fullName: Vim.Math3d.Vector3.Deconstruct
- uid: System.IEquatable{Vim.Math3d.Vector3}.Equals(Vim.Math3d.Vector3)
  commentId: M:System.IEquatable{Vim.Math3d.Vector3}.Equals(Vim.Math3d.Vector3)
  parent: System.IEquatable{Vim.Math3d.Vector3}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Vector3)
  nameWithType: IEquatable<Vector3>.Equals(Vector3)
  fullName: System.IEquatable<Vim.Math3d.Vector3>.Equals(Vim.Math3d.Vector3)
  nameWithType.vb: IEquatable(Of Vector3).Equals(Vector3)
  fullName.vb: System.IEquatable(Of Vim.Math3d.Vector3).Equals(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Vector3>.Equals
    fullName: System.IEquatable<Vim.Math3d.Vector3>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Vector3).Equals
    fullName: System.IEquatable(Of Vim.Math3d.Vector3).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.op_Equality*
  commentId: Overload:Vim.Math3d.Vector3.op_Equality
  name: Equality
  nameWithType: Vector3.Equality
  fullName: Vim.Math3d.Vector3.Equality
- uid: Vim.Math3d.Vector3.op_Inequality*
  commentId: Overload:Vim.Math3d.Vector3.op_Inequality
  name: Inequality
  nameWithType: Vector3.Inequality
  fullName: Vim.Math3d.Vector3.Inequality
- uid: Vim.Math3d.Vector3.op_Implicit*
  commentId: Overload:Vim.Math3d.Vector3.op_Implicit
  name: Implicit
  nameWithType: Vector3.Implicit
  fullName: Vim.Math3d.Vector3.Implicit
  nameWithType.vb: Vector3.Widening
  fullName.vb: Vim.Math3d.Vector3.Widening
  name.vb: Widening
- uid: Vim.Math3d.Vector3.AlmostEquals*
  commentId: Overload:Vim.Math3d.Vector3.AlmostEquals
  name: AlmostEquals
  nameWithType: Vector3.AlmostEquals
  fullName: Vim.Math3d.Vector3.AlmostEquals
- uid: Vim.Math3d.Vector3.SetX*
  commentId: Overload:Vim.Math3d.Vector3.SetX
  name: SetX
  nameWithType: Vector3.SetX
  fullName: Vim.Math3d.Vector3.SetX
- uid: Vim.Math3d.Vector3.SetY*
  commentId: Overload:Vim.Math3d.Vector3.SetY
  name: SetY
  nameWithType: Vector3.SetY
  fullName: Vim.Math3d.Vector3.SetY
- uid: Vim.Math3d.Vector3.SetZ*
  commentId: Overload:Vim.Math3d.Vector3.SetZ
  name: SetZ
  nameWithType: Vector3.SetZ
  fullName: Vim.Math3d.Vector3.SetZ
- uid: Vim.Math3d.Vector3.op_Addition*
  commentId: Overload:Vim.Math3d.Vector3.op_Addition
  name: Addition
  nameWithType: Vector3.Addition
  fullName: Vim.Math3d.Vector3.Addition
- uid: Vim.Math3d.Vector3.op_Subtraction*
  commentId: Overload:Vim.Math3d.Vector3.op_Subtraction
  name: Subtraction
  nameWithType: Vector3.Subtraction
  fullName: Vim.Math3d.Vector3.Subtraction
- uid: Vim.Math3d.Vector3.op_Multiply*
  commentId: Overload:Vim.Math3d.Vector3.op_Multiply
  name: Multiply
  nameWithType: Vector3.Multiply
  fullName: Vim.Math3d.Vector3.Multiply
- uid: Vim.Math3d.Vector3.op_Division*
  commentId: Overload:Vim.Math3d.Vector3.op_Division
  name: Division
  nameWithType: Vector3.Division
  fullName: Vim.Math3d.Vector3.Division
- uid: Vim.Math3d.Vector3.op_UnaryNegation*
  commentId: Overload:Vim.Math3d.Vector3.op_UnaryNegation
  name: UnaryNegation
  nameWithType: Vector3.UnaryNegation
  fullName: Vim.Math3d.Vector3.UnaryNegation
- uid: Vim.Math3d.Vector3.Dot*
  commentId: Overload:Vim.Math3d.Vector3.Dot
  name: Dot
  nameWithType: Vector3.Dot
  fullName: Vim.Math3d.Vector3.Dot
- uid: Vim.Math3d.Vector3.AlmostZero*
  commentId: Overload:Vim.Math3d.Vector3.AlmostZero
  name: AlmostZero
  nameWithType: Vector3.AlmostZero
  fullName: Vim.Math3d.Vector3.AlmostZero
- uid: Vim.Math3d.Vector3.AnyComponentNegative*
  commentId: Overload:Vim.Math3d.Vector3.AnyComponentNegative
  name: AnyComponentNegative
  nameWithType: Vector3.AnyComponentNegative
  fullName: Vim.Math3d.Vector3.AnyComponentNegative
- uid: Vim.Math3d.Vector3.MinComponent*
  commentId: Overload:Vim.Math3d.Vector3.MinComponent
  name: MinComponent
  nameWithType: Vector3.MinComponent
  fullName: Vim.Math3d.Vector3.MinComponent
- uid: Vim.Math3d.Vector3.MaxComponent*
  commentId: Overload:Vim.Math3d.Vector3.MaxComponent
  name: MaxComponent
  nameWithType: Vector3.MaxComponent
  fullName: Vim.Math3d.Vector3.MaxComponent
- uid: Vim.Math3d.Vector3.SumComponents*
  commentId: Overload:Vim.Math3d.Vector3.SumComponents
  name: SumComponents
  nameWithType: Vector3.SumComponents
  fullName: Vim.Math3d.Vector3.SumComponents
- uid: Vim.Math3d.Vector3.SumSqrComponents*
  commentId: Overload:Vim.Math3d.Vector3.SumSqrComponents
  name: SumSqrComponents
  nameWithType: Vector3.SumSqrComponents
  fullName: Vim.Math3d.Vector3.SumSqrComponents
- uid: Vim.Math3d.Vector3.ProductComponents*
  commentId: Overload:Vim.Math3d.Vector3.ProductComponents
  name: ProductComponents
  nameWithType: Vector3.ProductComponents
  fullName: Vim.Math3d.Vector3.ProductComponents
- uid: Vim.Math3d.Vector3.GetComponent*
  commentId: Overload:Vim.Math3d.Vector3.GetComponent
  name: GetComponent
  nameWithType: Vector3.GetComponent
  fullName: Vim.Math3d.Vector3.GetComponent
- uid: Vim.Math3d.Vector3.MagnitudeSquared*
  commentId: Overload:Vim.Math3d.Vector3.MagnitudeSquared
  name: MagnitudeSquared
  nameWithType: Vector3.MagnitudeSquared
  fullName: Vim.Math3d.Vector3.MagnitudeSquared
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Vim.Math3d.Vector3.Magnitude*
  commentId: Overload:Vim.Math3d.Vector3.Magnitude
  name: Magnitude
  nameWithType: Vector3.Magnitude
  fullName: Vim.Math3d.Vector3.Magnitude
- uid: Vim.Math3d.Vector3.IsNaN*
  commentId: Overload:Vim.Math3d.Vector3.IsNaN
  name: IsNaN
  nameWithType: Vector3.IsNaN
  fullName: Vim.Math3d.Vector3.IsNaN
- uid: Vim.Math3d.Vector3.IsInfinity*
  commentId: Overload:Vim.Math3d.Vector3.IsInfinity
  name: IsInfinity
  nameWithType: Vector3.IsInfinity
  fullName: Vim.Math3d.Vector3.IsInfinity
- uid: Vim.Math3d.Vector3.CompareTo*
  commentId: Overload:Vim.Math3d.Vector3.CompareTo
  name: CompareTo
  nameWithType: Vector3.CompareTo
  fullName: Vim.Math3d.Vector3.CompareTo
- uid: System.IComparable{Vim.Math3d.Vector3}.CompareTo(Vim.Math3d.Vector3)
  commentId: M:System.IComparable{Vim.Math3d.Vector3}.CompareTo(Vim.Math3d.Vector3)
  parent: System.IComparable{Vim.Math3d.Vector3}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(Vector3)
  nameWithType: IComparable<Vector3>.CompareTo(Vector3)
  fullName: System.IComparable<Vim.Math3d.Vector3>.CompareTo(Vim.Math3d.Vector3)
  nameWithType.vb: IComparable(Of Vector3).CompareTo(Vector3)
  fullName.vb: System.IComparable(Of Vim.Math3d.Vector3).CompareTo(Vim.Math3d.Vector3)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<Vector3>.CompareTo
    fullName: System.IComparable<Vim.Math3d.Vector3>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of Vector3).CompareTo
    fullName: System.IComparable(Of Vim.Math3d.Vector3).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Vector3
    name: Vector3
    nameWithType: Vector3
    fullName: Vim.Math3d.Vector3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.op_LessThan*
  commentId: Overload:Vim.Math3d.Vector3.op_LessThan
  name: LessThan
  nameWithType: Vector3.LessThan
  fullName: Vim.Math3d.Vector3.LessThan
- uid: Vim.Math3d.Vector3.op_LessThanOrEqual*
  commentId: Overload:Vim.Math3d.Vector3.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: Vector3.LessThanOrEqual
  fullName: Vim.Math3d.Vector3.LessThanOrEqual
- uid: Vim.Math3d.Vector3.op_GreaterThan*
  commentId: Overload:Vim.Math3d.Vector3.op_GreaterThan
  name: GreaterThan
  nameWithType: Vector3.GreaterThan
  fullName: Vim.Math3d.Vector3.GreaterThan
- uid: Vim.Math3d.Vector3.op_GreaterThanOrEqual*
  commentId: Overload:Vim.Math3d.Vector3.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: Vector3.GreaterThanOrEqual
  fullName: Vim.Math3d.Vector3.GreaterThanOrEqual
- uid: Vim.Math3d.Vector2
  commentId: T:Vim.Math3d.Vector2
  parent: Vim.Math3d
  name: Vector2
  nameWithType: Vector2
  fullName: Vim.Math3d.Vector2
- uid: Vim.Math3d.Vector3.Transform*
  commentId: Overload:Vim.Math3d.Vector3.Transform
  name: Transform
  nameWithType: Vector3.Transform
  fullName: Vim.Math3d.Vector3.Transform
- uid: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Transform(Vim.Math3d.Matrix4x4)
  commentId: M:Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}.Transform(Vim.Math3d.Matrix4x4)
  parent: Vim.Math3d.ITransformable3D{Vim.Math3d.Vector3}
  definition: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  nameWithType: ITransformable3D<Vector3>.Transform(Matrix4x4)
  fullName: Vim.Math3d.ITransformable3D<Vim.Math3d.Vector3>.Transform(Vim.Math3d.Matrix4x4)
  nameWithType.vb: ITransformable3D(Of Vector3).Transform(Matrix4x4)
  fullName.vb: Vim.Math3d.ITransformable3D(Of Vim.Math3d.Vector3).Transform(Vim.Math3d.Matrix4x4)
  spec.csharp:
  - uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
    name: Transform
    nameWithType: ITransformable3D<Vector3>.Transform
    fullName: Vim.Math3d.ITransformable3D<Vim.Math3d.Vector3>.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
    name: Transform
    nameWithType: ITransformable3D(Of Vector3).Transform
    fullName: Vim.Math3d.ITransformable3D(Of Vim.Math3d.Vector3).Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Matrix4x4
  commentId: T:Vim.Math3d.Matrix4x4
  parent: Vim.Math3d
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: Vim.Math3d.Matrix4x4
- uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
  commentId: M:Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
  name: Transform(Matrix4x4)
  nameWithType: ITransformable3D<TSelf>.Transform(Matrix4x4)
  fullName: Vim.Math3d.ITransformable3D<TSelf>.Transform(Vim.Math3d.Matrix4x4)
  nameWithType.vb: ITransformable3D(Of TSelf).Transform(Matrix4x4)
  fullName.vb: Vim.Math3d.ITransformable3D(Of TSelf).Transform(Vim.Math3d.Matrix4x4)
  spec.csharp:
  - uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
    name: Transform
    nameWithType: ITransformable3D<TSelf>.Transform
    fullName: Vim.Math3d.ITransformable3D<TSelf>.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.ITransformable3D`1.Transform(Vim.Math3d.Matrix4x4)
    name: Transform
    nameWithType: ITransformable3D(Of TSelf).Transform
    fullName: Vim.Math3d.ITransformable3D(Of TSelf).Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.Matrix4x4
    name: Matrix4x4
    nameWithType: Matrix4x4
    fullName: Vim.Math3d.Matrix4x4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.Vector3.Cross*
  commentId: Overload:Vim.Math3d.Vector3.Cross
  name: Cross
  nameWithType: Vector3.Cross
  fullName: Vim.Math3d.Vector3.Cross
- uid: Vim.Math3d.Vector3.MixedProduct*
  commentId: Overload:Vim.Math3d.Vector3.MixedProduct
  name: MixedProduct
  nameWithType: Vector3.MixedProduct
  fullName: Vim.Math3d.Vector3.MixedProduct
- uid: Vim.Math3d.Vector3.Reflect*
  commentId: Overload:Vim.Math3d.Vector3.Reflect
  name: Reflect
  nameWithType: Vector3.Reflect
  fullName: Vim.Math3d.Vector3.Reflect
- uid: Vim.Math3d.Vector3.TransformNormal*
  commentId: Overload:Vim.Math3d.Vector3.TransformNormal
  name: TransformNormal
  nameWithType: Vector3.TransformNormal
  fullName: Vim.Math3d.Vector3.TransformNormal
- uid: Vim.Math3d.Vector3.Clamp*
  commentId: Overload:Vim.Math3d.Vector3.Clamp
  name: Clamp
  nameWithType: Vector3.Clamp
  fullName: Vim.Math3d.Vector3.Clamp
- uid: Vim.Math3d.AABox
  commentId: T:Vim.Math3d.AABox
  parent: Vim.Math3d
  name: AABox
  nameWithType: AABox
  fullName: Vim.Math3d.AABox
- uid: Vim.Math3d.Vector3.XY*
  commentId: Overload:Vim.Math3d.Vector3.XY
  name: XY
  nameWithType: Vector3.XY
  fullName: Vim.Math3d.Vector3.XY
- uid: Vim.Math3d.Vector3.XZ*
  commentId: Overload:Vim.Math3d.Vector3.XZ
  name: XZ
  nameWithType: Vector3.XZ
  fullName: Vim.Math3d.Vector3.XZ
- uid: Vim.Math3d.Vector3.YZ*
  commentId: Overload:Vim.Math3d.Vector3.YZ
  name: YZ
  nameWithType: Vector3.YZ
  fullName: Vim.Math3d.Vector3.YZ
- uid: Vim.Math3d.Vector3.XZY*
  commentId: Overload:Vim.Math3d.Vector3.XZY
  name: XZY
  nameWithType: Vector3.XZY
  fullName: Vim.Math3d.Vector3.XZY
- uid: Vim.Math3d.Vector3.ZXY*
  commentId: Overload:Vim.Math3d.Vector3.ZXY
  name: ZXY
  nameWithType: Vector3.ZXY
  fullName: Vim.Math3d.Vector3.ZXY
- uid: Vim.Math3d.Vector3.ZYX*
  commentId: Overload:Vim.Math3d.Vector3.ZYX
  name: ZYX
  nameWithType: Vector3.ZYX
  fullName: Vim.Math3d.Vector3.ZYX
- uid: Vim.Math3d.Vector3.YXZ*
  commentId: Overload:Vim.Math3d.Vector3.YXZ
  name: YXZ
  nameWithType: Vector3.YXZ
  fullName: Vim.Math3d.Vector3.YXZ
- uid: Vim.Math3d.Vector3.YZX*
  commentId: Overload:Vim.Math3d.Vector3.YZX
  name: YZX
  nameWithType: Vector3.YZX
  fullName: Vim.Math3d.Vector3.YZX
