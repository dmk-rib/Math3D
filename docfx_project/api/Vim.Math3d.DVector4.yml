### YamlMime:ManagedReference
items:
- uid: Vim.Math3d.DVector4
  commentId: T:Vim.Math3d.DVector4
  id: DVector4
  parent: Vim.Math3d
  children:
  - Vim.Math3d.DVector4.#ctor(System.Double)
  - Vim.Math3d.DVector4.#ctor(System.Double,System.Double,System.Double,System.Double)
  - Vim.Math3d.DVector4.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  - Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4,System.Single)
  - Vim.Math3d.DVector4.AlmostZero(System.Single)
  - Vim.Math3d.DVector4.AnyComponentNegative
  - Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Create(System.Double,System.Double,System.Double,System.Double)
  - Vim.Math3d.DVector4.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  - Vim.Math3d.DVector4.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  - Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Equals(System.Object)
  - Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.GetComponent(System.Int32)
  - Vim.Math3d.DVector4.GetHashCode
  - Vim.Math3d.DVector4.IsInfinity
  - Vim.Math3d.DVector4.IsNaN
  - Vim.Math3d.DVector4.Magnitude
  - Vim.Math3d.DVector4.MagnitudeSquared
  - Vim.Math3d.DVector4.MaxComponent
  - Vim.Math3d.DVector4.MaxValue
  - Vim.Math3d.DVector4.MinComponent
  - Vim.Math3d.DVector4.MinValue
  - Vim.Math3d.DVector4.NumComponents
  - Vim.Math3d.DVector4.One
  - Vim.Math3d.DVector4.op_Addition(System.Double,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,System.Double)
  - Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Division(System.Double,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,System.Double)
  - Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  - Vim.Math3d.DVector4.op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  - Vim.Math3d.DVector4.op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Multiply(System.Double,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,System.Double)
  - Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Subtraction(System.Double,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,System.Double)
  - Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.op_UnaryNegation(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.ProductComponents
  - Vim.Math3d.DVector4.SetW(System.Double)
  - Vim.Math3d.DVector4.SetX(System.Double)
  - Vim.Math3d.DVector4.SetY(System.Double)
  - Vim.Math3d.DVector4.SetZ(System.Double)
  - Vim.Math3d.DVector4.SumComponents
  - Vim.Math3d.DVector4.SumSqrComponents
  - Vim.Math3d.DVector4.ToString
  - Vim.Math3d.DVector4.UnitW
  - Vim.Math3d.DVector4.UnitX
  - Vim.Math3d.DVector4.UnitY
  - Vim.Math3d.DVector4.UnitZ
  - Vim.Math3d.DVector4.Vector4
  - Vim.Math3d.DVector4.W
  - Vim.Math3d.DVector4.X
  - Vim.Math3d.DVector4.Y
  - Vim.Math3d.DVector4.Z
  - Vim.Math3d.DVector4.Zero
  langs:
  - csharp
  - vb
  name: DVector4
  nameWithType: DVector4
  fullName: Vim.Math3d.DVector4
  type: Struct
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: DVector4
    path: ../src/StructsPartial.cs
    startLine: 202
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataContract]

      public readonly struct DVector4 : IEquatable<DVector4>, IComparable<DVector4>
    content.vb: >-
      <DataContract>

      Public Structure DVector4
          Implements IEquatable(Of DVector4), IComparable(Of DVector4)
  implements:
  - System.IEquatable{Vim.Math3d.DVector4}
  - System.IComparable{Vim.Math3d.DVector4}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Negate
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,System.Single)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,System.Single)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.LengthSquared
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Length
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Normalize
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.SafeNormalize
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4)
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.SquareRoot
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Abs
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Acos
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Asin
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Atan
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cos
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cosh
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Exp
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Log
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Log10
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sin
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sinh
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sqrt
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Tan
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Tanh
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Inverse
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Ceiling
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Floor
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Round
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Truncate
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sqr
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cube
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.ToRadians
  - Vim.Math3d.DVector4.Vim.Math3d.MathOps.ToDegrees
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Vim.Math3d.DVector4.X
  commentId: F:Vim.Math3d.DVector4.X
  id: X
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: X
  nameWithType: DVector4.X
  fullName: Vim.Math3d.DVector4.X
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: X
    path: ../src/Structs.cs
    startLine: 378
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly double X
    return:
      type: System.Double
    content.vb: >-
      <DataMember>

      Public ReadOnly X As Double
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.DVector4.Y
  commentId: F:Vim.Math3d.DVector4.Y
  id: Y
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: DVector4.Y
  fullName: Vim.Math3d.DVector4.Y
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Y
    path: ../src/Structs.cs
    startLine: 380
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly double Y
    return:
      type: System.Double
    content.vb: >-
      <DataMember>

      Public ReadOnly Y As Double
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.DVector4.Z
  commentId: F:Vim.Math3d.DVector4.Z
  id: Z
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Z
  nameWithType: DVector4.Z
  fullName: Vim.Math3d.DVector4.Z
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Z
    path: ../src/Structs.cs
    startLine: 382
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly double Z
    return:
      type: System.Double
    content.vb: >-
      <DataMember>

      Public ReadOnly Z As Double
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.DVector4.W
  commentId: F:Vim.Math3d.DVector4.W
  id: W
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: W
  nameWithType: DVector4.W
  fullName: Vim.Math3d.DVector4.W
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: W
    path: ../src/Structs.cs
    startLine: 384
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly double W
    return:
      type: System.Double
    content.vb: >-
      <DataMember>

      Public ReadOnly W As Double
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.DVector4.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  commentId: M:Vim.Math3d.DVector4.#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  id: '#ctor(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})'
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: DVector4((Double x, Double y, Double z, Double w))
  nameWithType: DVector4.DVector4((Double x, Double y, Double z, Double w))
  fullName: Vim.Math3d.DVector4.DVector4(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 385
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public DVector4((double x, double y, double z, double w) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
    content.vb: Public Sub New(tuple As(x As Double, y As Double, z As Double, w As Double)(Of Double , Double, Double, Double))
  overload: Vim.Math3d.DVector4.#ctor*
  nameWithType.vb: DVector4.DVector4((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.DVector4.DVector4(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  name.vb: DVector4((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Vim.Math3d.DVector4.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: DVector4(Double, Double, Double, Double)
  nameWithType: DVector4.DVector4(Double, Double, Double, Double)
  fullName: Vim.Math3d.DVector4.DVector4(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 386
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public DVector4(double x, double y, double z, double w)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    - id: w
      type: System.Double
    content.vb: Public Sub New(x As Double, y As Double, z As Double, w As Double)
  overload: Vim.Math3d.DVector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.Create(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Vim.Math3d.DVector4.Create(System.Double,System.Double,System.Double,System.Double)
  id: Create(System.Double,System.Double,System.Double,System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Create(Double, Double, Double, Double)
  nameWithType: DVector4.Create(Double, Double, Double, Double)
  fullName: Vim.Math3d.DVector4.Create(System.Double, System.Double, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 387
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 Create(double x, double y, double z, double w)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    - id: w
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Function Create(x As Double, y As Double, z As Double, w As Double) As DVector4
  overload: Vim.Math3d.DVector4.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  commentId: M:Vim.Math3d.DVector4.Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  id: Create(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Create((Double x, Double y, Double z, Double w))
  nameWithType: DVector4.Create((Double x, Double y, Double z, Double w))
  fullName: Vim.Math3d.DVector4.Create(System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 388
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 Create((double x, double y, double z, double w) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Function Create(tuple As(x As Double, y As Double, z As Double, w As Double)(Of Double , Double, Double, Double)) As DVector4
  overload: Vim.Math3d.DVector4.Create*
  nameWithType.vb: DVector4.Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.DVector4.Create(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  name.vb: Create((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.Equals(System.Object)
  commentId: M:Vim.Math3d.DVector4.Equals(System.Object)
  id: Equals(System.Object)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: DVector4.Equals(Object)
  fullName: Vim.Math3d.DVector4.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 389
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Vim.Math3d.DVector4.Equals*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.DVector4.GetHashCode
  commentId: M:Vim.Math3d.DVector4.GetHashCode
  id: GetHashCode
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: DVector4.GetHashCode()
  fullName: Vim.Math3d.DVector4.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: GetHashCode
    path: ../src/Structs.cs
    startLine: 390
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Vim.Math3d.DVector4.GetHashCode*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.DVector4.ToString
  commentId: M:Vim.Math3d.DVector4.ToString
  id: ToString
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DVector4.ToString()
  fullName: Vim.Math3d.DVector4.ToString()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ToString
    path: ../src/Structs.cs
    startLine: 391
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Vim.Math3d.DVector4.ToString*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.DVector4.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  commentId: M:Vim.Math3d.DVector4.Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  id: Deconstruct(System.Double@,System.Double@,System.Double@,System.Double@)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Deconstruct(out Double, out Double, out Double, out Double)
  nameWithType: DVector4.Deconstruct(out Double, out Double, out Double, out Double)
  fullName: Vim.Math3d.DVector4.Deconstruct(out System.Double, out System.Double, out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Deconstruct
    path: ../src/Structs.cs
    startLine: 392
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly void Deconstruct(out double x, out double y, out double z, out double w)
    parameters:
    - id: x
      type: System.Double
    - id: y
      type: System.Double
    - id: z
      type: System.Double
    - id: w
      type: System.Double
    content.vb: Public Sub Deconstruct(ByRef x As Double, ByRef y As Double, ByRef z As Double, ByRef w As Double)
  overload: Vim.Math3d.DVector4.Deconstruct*
  nameWithType.vb: DVector4.Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.DVector4.Deconstruct(ByRef System.Double, ByRef System.Double, ByRef System.Double, ByRef System.Double)
  name.vb: Deconstruct(ByRef Double, ByRef Double, ByRef Double, ByRef Double)
- uid: Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  id: Equals(Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Equals(DVector4)
  nameWithType: DVector4.Equals(DVector4)
  fullName: Vim.Math3d.DVector4.Equals(Vim.Math3d.DVector4)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 393
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool Equals(DVector4 x)
    parameters:
    - id: x
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Function Equals(x As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.Equals*
  implements:
  - System.IEquatable{Vim.Math3d.DVector4}.Equals(Vim.Math3d.DVector4)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Equality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Equality(DVector4, DVector4)
  nameWithType: DVector4.Equality(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Equality(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Equality
    path: ../src/Structs.cs
    startLine: 394
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator ==(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Inequality(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Inequality(DVector4, DVector4)
  nameWithType: DVector4.Inequality(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Inequality(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Inequality
    path: ../src/Structs.cs
    startLine: 395
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator !=(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  commentId: M:Vim.Math3d.DVector4.op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  id: op_Implicit(System.ValueTuple{System.Double,System.Double,System.Double,System.Double})~Vim.Math3d.DVector4
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Implicit((Double x, Double y, Double z, Double w) to DVector4)
  nameWithType: DVector4.Implicit((Double x, Double y, Double z, Double w) to DVector4)
  fullName: Vim.Math3d.DVector4.Implicit(System.ValueTuple<System.Double, System.Double, System.Double, System.Double> to Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 396
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator DVector4((double x, double y, double z, double w) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Widening Operator CType(tuple As(x As Double, y As Double, z As Double, w As Double)(Of Double , Double, Double, Double)) As DVector4
  overload: Vim.Math3d.DVector4.op_Implicit*
  nameWithType.vb: DVector4.Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DVector4)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.DVector4.Widening(System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double) to Vim.Math3d.DVector4)
  name.vb: Widening((x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double) to DVector4)
- uid: Vim.Math3d.DVector4.op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  commentId: M:Vim.Math3d.DVector4.op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  id: op_Implicit(Vim.Math3d.DVector4)~System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Implicit(DVector4 to (Double x, Double y, Double z, Double w))
  nameWithType: DVector4.Implicit(DVector4 to (Double x, Double y, Double z, Double w))
  fullName: Vim.Math3d.DVector4.Implicit(Vim.Math3d.DVector4 to System.ValueTuple<System.Double, System.Double, System.Double, System.Double>)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 397
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator (double x, double y, double z, double w)(DVector4 self)
    parameters:
    - id: self
      type: Vim.Math3d.DVector4
    return:
      type: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
    content.vb: Public Shared Widening Operator CType(self As DVector4) As(x As Double, y As Double, z As Double, w As Double)(Of Double , Double, Double, Double)
  overload: Vim.Math3d.DVector4.op_Implicit*
  nameWithType.vb: DVector4.Widening(DVector4 to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.DVector4.Widening(Vim.Math3d.DVector4 to System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double))
  name.vb: Widening(DVector4 to (x As Double, y As Double, z As Double, w As Double)(Of Double, Double, Double, Double))
- uid: Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4,System.Single)
  commentId: M:Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4,System.Single)
  id: AlmostEquals(Vim.Math3d.DVector4,System.Single)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: AlmostEquals(DVector4, Single)
  nameWithType: DVector4.AlmostEquals(DVector4, Single)
  fullName: Vim.Math3d.DVector4.AlmostEquals(Vim.Math3d.DVector4, System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AlmostEquals
    path: ../src/Structs.cs
    startLine: 399
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AlmostEquals(DVector4 x, float tolerance = 1E-07F)
    parameters:
    - id: x
      type: Vim.Math3d.DVector4
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function AlmostEquals(x As DVector4, tolerance As Single = 1E-07F) As Boolean
  overload: Vim.Math3d.DVector4.AlmostEquals*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.Zero
  commentId: F:Vim.Math3d.DVector4.Zero
  id: Zero
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: DVector4.Zero
  fullName: Vim.Math3d.DVector4.Zero
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Zero
    path: ../src/Structs.cs
    startLine: 400
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 Zero
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Zero As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.MinValue
  commentId: F:Vim.Math3d.DVector4.MinValue
  id: MinValue
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: DVector4.MinValue
  fullName: Vim.Math3d.DVector4.MinValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MinValue
    path: ../src/Structs.cs
    startLine: 401
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 MinValue
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared MinValue As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.MaxValue
  commentId: F:Vim.Math3d.DVector4.MaxValue
  id: MaxValue
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: DVector4.MaxValue
  fullName: Vim.Math3d.DVector4.MaxValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MaxValue
    path: ../src/Structs.cs
    startLine: 402
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 MaxValue
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared MaxValue As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.SetX(System.Double)
  commentId: M:Vim.Math3d.DVector4.SetX(System.Double)
  id: SetX(System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SetX(Double)
  nameWithType: DVector4.SetX(Double)
  fullName: Vim.Math3d.DVector4.SetX(System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetX
    path: ../src/Structs.cs
    startLine: 403
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly DVector4 SetX(double x)
    parameters:
    - id: x
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Function SetX(x As Double) As DVector4
  overload: Vim.Math3d.DVector4.SetX*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.SetY(System.Double)
  commentId: M:Vim.Math3d.DVector4.SetY(System.Double)
  id: SetY(System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SetY(Double)
  nameWithType: DVector4.SetY(Double)
  fullName: Vim.Math3d.DVector4.SetY(System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetY
    path: ../src/Structs.cs
    startLine: 404
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly DVector4 SetY(double x)
    parameters:
    - id: x
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Function SetY(x As Double) As DVector4
  overload: Vim.Math3d.DVector4.SetY*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.SetZ(System.Double)
  commentId: M:Vim.Math3d.DVector4.SetZ(System.Double)
  id: SetZ(System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SetZ(Double)
  nameWithType: DVector4.SetZ(Double)
  fullName: Vim.Math3d.DVector4.SetZ(System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetZ
    path: ../src/Structs.cs
    startLine: 405
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly DVector4 SetZ(double x)
    parameters:
    - id: x
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Function SetZ(x As Double) As DVector4
  overload: Vim.Math3d.DVector4.SetZ*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.SetW(System.Double)
  commentId: M:Vim.Math3d.DVector4.SetW(System.Double)
  id: SetW(System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SetW(Double)
  nameWithType: DVector4.SetW(Double)
  fullName: Vim.Math3d.DVector4.SetW(System.Double)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetW
    path: ../src/Structs.cs
    startLine: 406
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly DVector4 SetW(double x)
    parameters:
    - id: x
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Function SetW(x As Double) As DVector4
  overload: Vim.Math3d.DVector4.SetW*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Addition(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Addition(DVector4, DVector4)
  nameWithType: DVector4.Addition(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Addition(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 407
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator +(DVector4 value1, DVector4 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator +(value1 As DVector4, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,System.Double)
  commentId: M:Vim.Math3d.DVector4.op_Addition(Vim.Math3d.DVector4,System.Double)
  id: op_Addition(Vim.Math3d.DVector4,System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Addition(DVector4, Double)
  nameWithType: DVector4.Addition(DVector4, Double)
  fullName: Vim.Math3d.DVector4.Addition(Vim.Math3d.DVector4, System.Double)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 408
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator +(DVector4 value1, double value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator +(value1 As DVector4, value2 As Double) As DVector4
  overload: Vim.Math3d.DVector4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Addition(System.Double,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Addition(System.Double,Vim.Math3d.DVector4)
  id: op_Addition(System.Double,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Addition(Double, DVector4)
  nameWithType: DVector4.Addition(Double, DVector4)
  fullName: Vim.Math3d.DVector4.Addition(System.Double, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Addition
    path: ../src/Structs.cs
    startLine: 409
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator +(double value1, DVector4 value2)
    parameters:
    - id: value1
      type: System.Double
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator +(value1 As Double, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Subtraction(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Subtraction(DVector4, DVector4)
  nameWithType: DVector4.Subtraction(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Subtraction(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 410
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator -(DVector4 value1, DVector4 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator -(value1 As DVector4, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,System.Double)
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(Vim.Math3d.DVector4,System.Double)
  id: op_Subtraction(Vim.Math3d.DVector4,System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Subtraction(DVector4, Double)
  nameWithType: DVector4.Subtraction(DVector4, Double)
  fullName: Vim.Math3d.DVector4.Subtraction(Vim.Math3d.DVector4, System.Double)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 411
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator -(DVector4 value1, double value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator -(value1 As DVector4, value2 As Double) As DVector4
  overload: Vim.Math3d.DVector4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Subtraction(System.Double,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Subtraction(System.Double,Vim.Math3d.DVector4)
  id: op_Subtraction(System.Double,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Subtraction(Double, DVector4)
  nameWithType: DVector4.Subtraction(Double, DVector4)
  fullName: Vim.Math3d.DVector4.Subtraction(System.Double, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Subtraction
    path: ../src/Structs.cs
    startLine: 412
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator -(double value1, DVector4 value2)
    parameters:
    - id: value1
      type: System.Double
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator -(value1 As Double, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Multiply(DVector4, DVector4)
  nameWithType: DVector4.Multiply(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Multiply(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 413
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator *(DVector4 value1, DVector4 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator *(value1 As DVector4, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,System.Double)
  commentId: M:Vim.Math3d.DVector4.op_Multiply(Vim.Math3d.DVector4,System.Double)
  id: op_Multiply(Vim.Math3d.DVector4,System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Multiply(DVector4, Double)
  nameWithType: DVector4.Multiply(DVector4, Double)
  fullName: Vim.Math3d.DVector4.Multiply(Vim.Math3d.DVector4, System.Double)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 414
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator *(DVector4 value1, double value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator *(value1 As DVector4, value2 As Double) As DVector4
  overload: Vim.Math3d.DVector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Multiply(System.Double,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Multiply(System.Double,Vim.Math3d.DVector4)
  id: op_Multiply(System.Double,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Multiply(Double, DVector4)
  nameWithType: DVector4.Multiply(Double, DVector4)
  fullName: Vim.Math3d.DVector4.Multiply(System.Double, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Multiply
    path: ../src/Structs.cs
    startLine: 415
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator *(double value1, DVector4 value2)
    parameters:
    - id: value1
      type: System.Double
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator *(value1 As Double, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_Division(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Division(DVector4, DVector4)
  nameWithType: DVector4.Division(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Division(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 416
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator /(DVector4 value1, DVector4 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator /(value1 As DVector4, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,System.Double)
  commentId: M:Vim.Math3d.DVector4.op_Division(Vim.Math3d.DVector4,System.Double)
  id: op_Division(Vim.Math3d.DVector4,System.Double)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Division(DVector4, Double)
  nameWithType: DVector4.Division(DVector4, Double)
  fullName: Vim.Math3d.DVector4.Division(Vim.Math3d.DVector4, System.Double)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 417
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator /(DVector4 value1, double value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: System.Double
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator /(value1 As DVector4, value2 As Double) As DVector4
  overload: Vim.Math3d.DVector4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_Division(System.Double,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_Division(System.Double,Vim.Math3d.DVector4)
  id: op_Division(System.Double,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Division(Double, DVector4)
  nameWithType: DVector4.Division(Double, DVector4)
  fullName: Vim.Math3d.DVector4.Division(System.Double, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Division
    path: ../src/Structs.cs
    startLine: 418
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator /(double value1, DVector4 value2)
    parameters:
    - id: value1
      type: System.Double
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator /(value1 As Double, value2 As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.One
  commentId: F:Vim.Math3d.DVector4.One
  id: One
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: One
  nameWithType: DVector4.One
  fullName: Vim.Math3d.DVector4.One
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: One
    path: ../src/Structs.cs
    startLine: 419
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 One
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared One As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.UnitX
  commentId: F:Vim.Math3d.DVector4.UnitX
  id: UnitX
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: DVector4.UnitX
  fullName: Vim.Math3d.DVector4.UnitX
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitX
    path: ../src/Structs.cs
    startLine: 420
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 UnitX
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared UnitX As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.UnitY
  commentId: F:Vim.Math3d.DVector4.UnitY
  id: UnitY
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: DVector4.UnitY
  fullName: Vim.Math3d.DVector4.UnitY
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitY
    path: ../src/Structs.cs
    startLine: 421
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 UnitY
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared UnitY As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.UnitZ
  commentId: F:Vim.Math3d.DVector4.UnitZ
  id: UnitZ
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: DVector4.UnitZ
  fullName: Vim.Math3d.DVector4.UnitZ
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitZ
    path: ../src/Structs.cs
    startLine: 422
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 UnitZ
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared UnitZ As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.UnitW
  commentId: F:Vim.Math3d.DVector4.UnitW
  id: UnitW
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: UnitW
  nameWithType: DVector4.UnitW
  fullName: Vim.Math3d.DVector4.UnitW
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: UnitW
    path: ../src/Structs.cs
    startLine: 423
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 UnitW
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared UnitW As DVector4
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.#ctor(System.Double)
  commentId: M:Vim.Math3d.DVector4.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: DVector4(Double)
  nameWithType: DVector4.DVector4(Double)
  fullName: Vim.Math3d.DVector4.DVector4(System.Double)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 424
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public DVector4(double value)
    parameters:
    - id: value
      type: System.Double
    content.vb: Public Sub New(value As Double)
  overload: Vim.Math3d.DVector4.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.op_UnaryNegation(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_UnaryNegation(Vim.Math3d.DVector4)
  id: op_UnaryNegation(Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: UnaryNegation(DVector4)
  nameWithType: DVector4.UnaryNegation(DVector4)
  fullName: Vim.Math3d.DVector4.UnaryNegation(Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_UnaryNegation
    path: ../src/Structs.cs
    startLine: 425
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static DVector4 operator -(DVector4 value)
    parameters:
    - id: value
      type: Vim.Math3d.DVector4
    return:
      type: Vim.Math3d.DVector4
    content.vb: Public Shared Operator -(value As DVector4) As DVector4
  overload: Vim.Math3d.DVector4.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Dot(DVector4, DVector4)
  nameWithType: DVector4.Dot(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Dot
    path: ../src/Structs.cs
    startLine: 426
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static double Dot(DVector4 value1, DVector4 value2)
    parameters:
    - id: value1
      type: Vim.Math3d.DVector4
    - id: value2
      type: Vim.Math3d.DVector4
    return:
      type: System.Double
    content.vb: Public Shared Function Dot(value1 As DVector4, value2 As DVector4) As Double
  overload: Vim.Math3d.DVector4.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  id: Dot(Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Dot(DVector4)
  nameWithType: DVector4.Dot(DVector4)
  fullName: Vim.Math3d.DVector4.Dot(Vim.Math3d.DVector4)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Dot
    path: ../src/Structs.cs
    startLine: 427
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double Dot(DVector4 value)
    parameters:
    - id: value
      type: Vim.Math3d.DVector4
    return:
      type: System.Double
    content.vb: Public Function Dot(value As DVector4) As Double
  overload: Vim.Math3d.DVector4.Dot*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.AlmostZero(System.Single)
  commentId: M:Vim.Math3d.DVector4.AlmostZero(System.Single)
  id: AlmostZero(System.Single)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: AlmostZero(Single)
  nameWithType: DVector4.AlmostZero(Single)
  fullName: Vim.Math3d.DVector4.AlmostZero(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AlmostZero
    path: ../src/Structs.cs
    startLine: 428
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AlmostZero(float tolerance = 1E-07F)
    parameters:
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function AlmostZero(tolerance As Single = 1E-07F) As Boolean
  overload: Vim.Math3d.DVector4.AlmostZero*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.AnyComponentNegative
  commentId: M:Vim.Math3d.DVector4.AnyComponentNegative
  id: AnyComponentNegative
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: AnyComponentNegative()
  nameWithType: DVector4.AnyComponentNegative()
  fullName: Vim.Math3d.DVector4.AnyComponentNegative()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AnyComponentNegative
    path: ../src/Structs.cs
    startLine: 429
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AnyComponentNegative()
    return:
      type: System.Boolean
    content.vb: Public Function AnyComponentNegative As Boolean
  overload: Vim.Math3d.DVector4.AnyComponentNegative*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.MinComponent
  commentId: M:Vim.Math3d.DVector4.MinComponent
  id: MinComponent
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: MinComponent()
  nameWithType: DVector4.MinComponent()
  fullName: Vim.Math3d.DVector4.MinComponent()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MinComponent
    path: ../src/Structs.cs
    startLine: 430
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double MinComponent()
    return:
      type: System.Double
    content.vb: Public Function MinComponent As Double
  overload: Vim.Math3d.DVector4.MinComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.MaxComponent
  commentId: M:Vim.Math3d.DVector4.MaxComponent
  id: MaxComponent
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: MaxComponent()
  nameWithType: DVector4.MaxComponent()
  fullName: Vim.Math3d.DVector4.MaxComponent()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MaxComponent
    path: ../src/Structs.cs
    startLine: 431
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double MaxComponent()
    return:
      type: System.Double
    content.vb: Public Function MaxComponent As Double
  overload: Vim.Math3d.DVector4.MaxComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.SumComponents
  commentId: M:Vim.Math3d.DVector4.SumComponents
  id: SumComponents
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SumComponents()
  nameWithType: DVector4.SumComponents()
  fullName: Vim.Math3d.DVector4.SumComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SumComponents
    path: ../src/Structs.cs
    startLine: 432
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double SumComponents()
    return:
      type: System.Double
    content.vb: Public Function SumComponents As Double
  overload: Vim.Math3d.DVector4.SumComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.SumSqrComponents
  commentId: M:Vim.Math3d.DVector4.SumSqrComponents
  id: SumSqrComponents
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: SumSqrComponents()
  nameWithType: DVector4.SumSqrComponents()
  fullName: Vim.Math3d.DVector4.SumSqrComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SumSqrComponents
    path: ../src/Structs.cs
    startLine: 433
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double SumSqrComponents()
    return:
      type: System.Double
    content.vb: Public Function SumSqrComponents As Double
  overload: Vim.Math3d.DVector4.SumSqrComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.ProductComponents
  commentId: M:Vim.Math3d.DVector4.ProductComponents
  id: ProductComponents
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: ProductComponents()
  nameWithType: DVector4.ProductComponents()
  fullName: Vim.Math3d.DVector4.ProductComponents()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ProductComponents
    path: ../src/Structs.cs
    startLine: 434
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double ProductComponents()
    return:
      type: System.Double
    content.vb: Public Function ProductComponents As Double
  overload: Vim.Math3d.DVector4.ProductComponents*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.GetComponent(System.Int32)
  commentId: M:Vim.Math3d.DVector4.GetComponent(System.Int32)
  id: GetComponent(System.Int32)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: GetComponent(Int32)
  nameWithType: DVector4.GetComponent(Int32)
  fullName: Vim.Math3d.DVector4.GetComponent(System.Int32)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: GetComponent
    path: ../src/Structs.cs
    startLine: 435
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double GetComponent(int n)
    parameters:
    - id: n
      type: System.Int32
    return:
      type: System.Double
    content.vb: Public Function GetComponent(n As Integer) As Double
  overload: Vim.Math3d.DVector4.GetComponent*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.MagnitudeSquared
  commentId: M:Vim.Math3d.DVector4.MagnitudeSquared
  id: MagnitudeSquared
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: MagnitudeSquared()
  nameWithType: DVector4.MagnitudeSquared()
  fullName: Vim.Math3d.DVector4.MagnitudeSquared()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MagnitudeSquared
    path: ../src/Structs.cs
    startLine: 436
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double MagnitudeSquared()
    return:
      type: System.Double
    content.vb: Public Function MagnitudeSquared As Double
  overload: Vim.Math3d.DVector4.MagnitudeSquared*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.Magnitude
  commentId: M:Vim.Math3d.DVector4.Magnitude
  id: Magnitude
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Magnitude()
  nameWithType: DVector4.Magnitude()
  fullName: Vim.Math3d.DVector4.Magnitude()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Magnitude
    path: ../src/Structs.cs
    startLine: 437
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly double Magnitude()
    return:
      type: System.Double
    content.vb: Public Function Magnitude As Double
  overload: Vim.Math3d.DVector4.Magnitude*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.NumComponents
  commentId: F:Vim.Math3d.DVector4.NumComponents
  id: NumComponents
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: NumComponents
  nameWithType: DVector4.NumComponents
  fullName: Vim.Math3d.DVector4.NumComponents
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: NumComponents
    path: ../src/Structs.cs
    startLine: 438
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public const int NumComponents = 4
    return:
      type: System.Int32
    content.vb: Public Const NumComponents As Integer = 4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Vim.Math3d.DVector4.IsNaN
  commentId: M:Vim.Math3d.DVector4.IsNaN
  id: IsNaN
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: IsNaN()
  nameWithType: DVector4.IsNaN()
  fullName: Vim.Math3d.DVector4.IsNaN()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: IsNaN
    path: ../src/Structs.cs
    startLine: 440
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool IsNaN()
    return:
      type: System.Boolean
    content.vb: Public Function IsNaN As Boolean
  overload: Vim.Math3d.DVector4.IsNaN*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.IsInfinity
  commentId: M:Vim.Math3d.DVector4.IsInfinity
  id: IsInfinity
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: IsInfinity()
  nameWithType: DVector4.IsInfinity()
  fullName: Vim.Math3d.DVector4.IsInfinity()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: IsInfinity
    path: ../src/Structs.cs
    startLine: 441
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool IsInfinity()
    return:
      type: System.Boolean
    content.vb: Public Function IsInfinity As Boolean
  overload: Vim.Math3d.DVector4.IsInfinity*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  id: CompareTo(Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: CompareTo(DVector4)
  nameWithType: DVector4.CompareTo(DVector4)
  fullName: Vim.Math3d.DVector4.CompareTo(Vim.Math3d.DVector4)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: CompareTo
    path: ../src/Structs.cs
    startLine: 442
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly int CompareTo(DVector4 x)
    parameters:
    - id: x
      type: Vim.Math3d.DVector4
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(x As DVector4) As Integer
  overload: Vim.Math3d.DVector4.CompareTo*
  implements:
  - System.IComparable{Vim.Math3d.DVector4}.CompareTo(Vim.Math3d.DVector4)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.DVector4.op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_LessThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: LessThan(DVector4, DVector4)
  nameWithType: DVector4.LessThan(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.LessThan(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_LessThan
    path: ../src/Structs.cs
    startLine: 443
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator <(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_LessThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(DVector4, DVector4)
  nameWithType: DVector4.LessThanOrEqual(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.LessThanOrEqual(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_LessThanOrEqual
    path: ../src/Structs.cs
    startLine: 444
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator <=(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <=(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_GreaterThan(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: GreaterThan(DVector4, DVector4)
  nameWithType: DVector4.GreaterThan(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.GreaterThan(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_GreaterThan
    path: ../src/Structs.cs
    startLine: 445
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator>(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator>(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.DVector4.op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  id: op_GreaterThanOrEqual(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(DVector4, DVector4)
  nameWithType: DVector4.GreaterThanOrEqual(DVector4, DVector4)
  fullName: Vim.Math3d.DVector4.GreaterThanOrEqual(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_GreaterThanOrEqual
    path: ../src/Structs.cs
    startLine: 446
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator >=(DVector4 x0, DVector4 x1)
    parameters:
    - id: x0
      type: Vim.Math3d.DVector4
    - id: x1
      type: Vim.Math3d.DVector4
    return:
      type: System.Boolean
    content.vb: Public Shared Operator >=(x0 As DVector4, x1 As DVector4) As Boolean
  overload: Vim.Math3d.DVector4.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.DVector4.Vector4
  commentId: P:Vim.Math3d.DVector4.Vector4
  id: Vector4
  parent: Vim.Math3d.DVector4
  langs:
  - csharp
  - vb
  name: Vector4
  nameWithType: DVector4.Vector4
  fullName: Vim.Math3d.DVector4.Vector4
  type: Property
  source:
    remote:
      path: src/StructsPartial.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Vector4
    path: ../src/StructsPartial.cs
    startLine: 204
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly Vector4 Vector4 { get; }
    parameters: []
    return:
      type: Vim.Math3d.Vector4
    content.vb: Public ReadOnly Property Vector4 As Vector4
  overload: Vim.Math3d.DVector4.Vector4*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Vim.Math3d
  commentId: N:Vim.Math3d
  name: Vim.Math3d
  nameWithType: Vim.Math3d
  fullName: Vim.Math3d
- uid: System.IEquatable{Vim.Math3d.DVector4}
  commentId: T:System.IEquatable{Vim.Math3d.DVector4}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<DVector4>
  nameWithType: IEquatable<DVector4>
  fullName: System.IEquatable<Vim.Math3d.DVector4>
  nameWithType.vb: IEquatable(Of DVector4)
  fullName.vb: System.IEquatable(Of Vim.Math3d.DVector4)
  name.vb: IEquatable(Of DVector4)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{Vim.Math3d.DVector4}
  commentId: T:System.IComparable{Vim.Math3d.DVector4}
  parent: System
  definition: System.IComparable`1
  name: IComparable<DVector4>
  nameWithType: IComparable<DVector4>
  fullName: System.IComparable<Vim.Math3d.DVector4>
  nameWithType.vb: IComparable(Of DVector4)
  fullName.vb: System.IComparable(Of Vim.Math3d.DVector4)
  name.vb: IComparable(Of DVector4)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Add(DVector4)
  nameWithType: MathOps.Add(DVector4)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Subtract(DVector4)
  nameWithType: MathOps.Subtract(DVector4)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Multiply(DVector4)
  nameWithType: MathOps.Multiply(DVector4)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Divide(DVector4)
  nameWithType: MathOps.Divide(DVector4)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Negate
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  name: Negate()
  nameWithType: MathOps.Negate()
  fullName: Vim.Math3d.MathOps.Negate()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Negate
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Negate
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,System.Single)
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  name: Lerp(DVector4, Single)
  nameWithType: MathOps.Lerp(DVector4, Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: InverseLerp(DVector4, DVector4)
  nameWithType: MathOps.InverseLerp(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,System.Single)
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  name: LerpPrecise(DVector4, Single)
  nameWithType: MathOps.LerpPrecise(DVector4, Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampLower(DVector4)
  nameWithType: MathOps.ClampLower(DVector4)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampUpper(DVector4)
  nameWithType: MathOps.ClampUpper(DVector4)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Clamp(DVector4, DVector4)
  nameWithType: MathOps.Clamp(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Average(DVector4)
  nameWithType: MathOps.Average(DVector4)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  name: Barycentric(DVector4, DVector4, Single, Single)
  nameWithType: MathOps.Barycentric(DVector4, DVector4, Single, Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: DistanceSquared(DVector4)
  nameWithType: MathOps.DistanceSquared(DVector4)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Distance(DVector4)
  nameWithType: MathOps.Distance(DVector4)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.LengthSquared
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  name: LengthSquared()
  nameWithType: MathOps.LengthSquared()
  fullName: Vim.Math3d.MathOps.LengthSquared()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LengthSquared
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LengthSquared
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Length
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  name: Length()
  nameWithType: MathOps.Length()
  fullName: Vim.Math3d.MathOps.Length()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Length
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Length
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Normalize
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  name: Normalize()
  nameWithType: MathOps.Normalize()
  fullName: Vim.Math3d.MathOps.Normalize()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Normalize
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Normalize
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.SafeNormalize
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  name: SafeNormalize()
  nameWithType: MathOps.SafeNormalize()
  fullName: Vim.Math3d.MathOps.SafeNormalize()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SafeNormalize
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SafeNormalize
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Dot(DVector4)
  nameWithType: MathOps.Dot(DVector4)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Min(DVector4)
  nameWithType: MathOps.Min(DVector4)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Max(DVector4)
  nameWithType: MathOps.Max(DVector4)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.SquareRoot
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  name: SquareRoot()
  nameWithType: MathOps.SquareRoot()
  fullName: Vim.Math3d.MathOps.SquareRoot()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SquareRoot
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SquareRoot
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Abs
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  name: Abs()
  nameWithType: MathOps.Abs()
  fullName: Vim.Math3d.MathOps.Abs()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Abs
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Abs
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Acos
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  name: Acos()
  nameWithType: MathOps.Acos()
  fullName: Vim.Math3d.MathOps.Acos()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Acos
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Acos
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Asin
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  name: Asin()
  nameWithType: MathOps.Asin()
  fullName: Vim.Math3d.MathOps.Asin()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Asin
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Asin
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Atan
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  name: Atan()
  nameWithType: MathOps.Atan()
  fullName: Vim.Math3d.MathOps.Atan()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Atan
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Atan
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cos
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  name: Cos()
  nameWithType: MathOps.Cos()
  fullName: Vim.Math3d.MathOps.Cos()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cos
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cos
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cosh
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  name: Cosh()
  nameWithType: MathOps.Cosh()
  fullName: Vim.Math3d.MathOps.Cosh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cosh
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cosh
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Exp
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  name: Exp()
  nameWithType: MathOps.Exp()
  fullName: Vim.Math3d.MathOps.Exp()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Exp
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Exp
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Log
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  name: Log()
  nameWithType: MathOps.Log()
  fullName: Vim.Math3d.MathOps.Log()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Log10
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  name: Log10()
  nameWithType: MathOps.Log10()
  fullName: Vim.Math3d.MathOps.Log10()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log10
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log10
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sin
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  name: Sin()
  nameWithType: MathOps.Sin()
  fullName: Vim.Math3d.MathOps.Sin()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sin
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sin
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sinh
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  name: Sinh()
  nameWithType: MathOps.Sinh()
  fullName: Vim.Math3d.MathOps.Sinh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sinh
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sinh
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sqrt
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  name: Sqrt()
  nameWithType: MathOps.Sqrt()
  fullName: Vim.Math3d.MathOps.Sqrt()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqrt
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqrt
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Tan
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  name: Tan()
  nameWithType: MathOps.Tan()
  fullName: Vim.Math3d.MathOps.Tan()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tan
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tan
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Tanh
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  name: Tanh()
  nameWithType: MathOps.Tanh()
  fullName: Vim.Math3d.MathOps.Tanh()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tanh
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tanh
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Inverse
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  name: Inverse()
  nameWithType: MathOps.Inverse()
  fullName: Vim.Math3d.MathOps.Inverse()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Inverse
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Inverse
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Ceiling
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  name: Ceiling()
  nameWithType: MathOps.Ceiling()
  fullName: Vim.Math3d.MathOps.Ceiling()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Ceiling
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Ceiling
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Floor
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  name: Floor()
  nameWithType: MathOps.Floor()
  fullName: Vim.Math3d.MathOps.Floor()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Floor
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Floor
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Round
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  name: Round()
  nameWithType: MathOps.Round()
  fullName: Vim.Math3d.MathOps.Round()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Round
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Round
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Truncate
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  name: Truncate()
  nameWithType: MathOps.Truncate()
  fullName: Vim.Math3d.MathOps.Truncate()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Truncate
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Truncate
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Sqr
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  name: Sqr()
  nameWithType: MathOps.Sqr()
  fullName: Vim.Math3d.MathOps.Sqr()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqr
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqr
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.Cube
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  name: Cube()
  nameWithType: MathOps.Cube()
  fullName: Vim.Math3d.MathOps.Cube()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cube
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cube
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.ToRadians
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  name: ToRadians()
  nameWithType: MathOps.ToRadians()
  fullName: Vim.Math3d.MathOps.ToRadians()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToRadians
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToRadians
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Vim.Math3d.MathOps.ToDegrees
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  parent: Vim.Math3d.MathOps
  definition: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  name: ToDegrees()
  nameWithType: MathOps.ToDegrees()
  fullName: Vim.Math3d.MathOps.ToDegrees()
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToDegrees
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToDegrees
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Add(DVector4, DVector4)
  nameWithType: MathOps.Add(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Add(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Add
    nameWithType: MathOps.Add
    fullName: Vim.Math3d.MathOps.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps
  commentId: T:Vim.Math3d.MathOps
  parent: Vim.Math3d
  name: MathOps
  nameWithType: MathOps
  fullName: Vim.Math3d.MathOps
- uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Subtract(DVector4, DVector4)
  nameWithType: MathOps.Subtract(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Subtract(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Subtract
    nameWithType: MathOps.Subtract
    fullName: Vim.Math3d.MathOps.Subtract
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Multiply(DVector4, DVector4)
  nameWithType: MathOps.Multiply(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Multiply(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Multiply
    nameWithType: MathOps.Multiply
    fullName: Vim.Math3d.MathOps.Multiply
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Divide(DVector4, DVector4)
  nameWithType: MathOps.Divide(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Divide(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Divide
    nameWithType: MathOps.Divide
    fullName: Vim.Math3d.MathOps.Divide
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  name: Negate(DVector4)
  nameWithType: MathOps.Negate(DVector4)
  fullName: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Negate(Vim.Math3d.DVector4)
    name: Negate
    nameWithType: MathOps.Negate
    fullName: Vim.Math3d.MathOps.Negate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  commentId: M:Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  isExternal: true
  name: Lerp(DVector4, DVector4, Single)
  nameWithType: MathOps.Lerp(DVector4, DVector4, Single)
  fullName: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Lerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
    name: Lerp
    nameWithType: MathOps.Lerp
    fullName: Vim.Math3d.MathOps.Lerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: InverseLerp(DVector4, DVector4, DVector4)
  nameWithType: MathOps.InverseLerp(DVector4, DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.InverseLerp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: InverseLerp
    nameWithType: MathOps.InverseLerp
    fullName: Vim.Math3d.MathOps.InverseLerp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  commentId: M:Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
  isExternal: true
  name: LerpPrecise(DVector4, DVector4, Single)
  nameWithType: MathOps.LerpPrecise(DVector4, DVector4, Single)
  fullName: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LerpPrecise(Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single)
    name: LerpPrecise
    nameWithType: MathOps.LerpPrecise
    fullName: Vim.Math3d.MathOps.LerpPrecise
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampLower(DVector4, DVector4)
  nameWithType: MathOps.ClampLower(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampLower(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: ClampLower
    nameWithType: MathOps.ClampLower
    fullName: Vim.Math3d.MathOps.ClampLower
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: ClampUpper(DVector4, DVector4)
  nameWithType: MathOps.ClampUpper(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ClampUpper(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: ClampUpper
    nameWithType: MathOps.ClampUpper
    fullName: Vim.Math3d.MathOps.ClampUpper
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Clamp(DVector4, DVector4, DVector4)
  nameWithType: MathOps.Clamp(DVector4, DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Clamp(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Clamp
    nameWithType: MathOps.Clamp
    fullName: Vim.Math3d.MathOps.Clamp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Average(DVector4, DVector4)
  nameWithType: MathOps.Average(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Average(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Average
    nameWithType: MathOps.Average
    fullName: Vim.Math3d.MathOps.Average
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  commentId: M:Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
  isExternal: true
  name: Barycentric(DVector4, DVector4, DVector4, Single, Single)
  nameWithType: MathOps.Barycentric(DVector4, DVector4, DVector4, Single, Single)
  fullName: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4, Vim.Math3d.DVector4, Vim.Math3d.DVector4, System.Single, System.Single)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Barycentric(Vim.Math3d.DVector4,Vim.Math3d.DVector4,Vim.Math3d.DVector4,System.Single,System.Single)
    name: Barycentric
    nameWithType: MathOps.Barycentric
    fullName: Vim.Math3d.MathOps.Barycentric
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: DistanceSquared(DVector4, DVector4)
  nameWithType: MathOps.DistanceSquared(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.DistanceSquared(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: DistanceSquared
    nameWithType: MathOps.DistanceSquared
    fullName: Vim.Math3d.MathOps.DistanceSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Distance(DVector4, DVector4)
  nameWithType: MathOps.Distance(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Distance(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Distance
    nameWithType: MathOps.Distance
    fullName: Vim.Math3d.MathOps.Distance
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  name: LengthSquared(DVector4)
  nameWithType: MathOps.LengthSquared(DVector4)
  fullName: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.LengthSquared(Vim.Math3d.DVector4)
    name: LengthSquared
    nameWithType: MathOps.LengthSquared
    fullName: Vim.Math3d.MathOps.LengthSquared
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  name: Length(DVector4)
  nameWithType: MathOps.Length(DVector4)
  fullName: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Length(Vim.Math3d.DVector4)
    name: Length
    nameWithType: MathOps.Length
    fullName: Vim.Math3d.MathOps.Length
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  name: Normalize(DVector4)
  nameWithType: MathOps.Normalize(DVector4)
  fullName: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Normalize(Vim.Math3d.DVector4)
    name: Normalize
    nameWithType: MathOps.Normalize
    fullName: Vim.Math3d.MathOps.Normalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  name: SafeNormalize(DVector4)
  nameWithType: MathOps.SafeNormalize(DVector4)
  fullName: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SafeNormalize(Vim.Math3d.DVector4)
    name: SafeNormalize
    nameWithType: MathOps.SafeNormalize
    fullName: Vim.Math3d.MathOps.SafeNormalize
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Dot(DVector4, DVector4)
  nameWithType: MathOps.Dot(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Dot(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Dot
    nameWithType: MathOps.Dot
    fullName: Vim.Math3d.MathOps.Dot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Min(DVector4, DVector4)
  nameWithType: MathOps.Min(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Min(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Min
    nameWithType: MathOps.Min
    fullName: Vim.Math3d.MathOps.Min
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
  name: Max(DVector4, DVector4)
  nameWithType: MathOps.Max(DVector4, DVector4)
  fullName: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4, Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Max(Vim.Math3d.DVector4,Vim.Math3d.DVector4)
    name: Max
    nameWithType: MathOps.Max
    fullName: Vim.Math3d.MathOps.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  name: SquareRoot(DVector4)
  nameWithType: MathOps.SquareRoot(DVector4)
  fullName: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.SquareRoot(Vim.Math3d.DVector4)
    name: SquareRoot
    nameWithType: MathOps.SquareRoot
    fullName: Vim.Math3d.MathOps.SquareRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  name: Abs(DVector4)
  nameWithType: MathOps.Abs(DVector4)
  fullName: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Abs(Vim.Math3d.DVector4)
    name: Abs
    nameWithType: MathOps.Abs
    fullName: Vim.Math3d.MathOps.Abs
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  name: Acos(DVector4)
  nameWithType: MathOps.Acos(DVector4)
  fullName: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Acos(Vim.Math3d.DVector4)
    name: Acos
    nameWithType: MathOps.Acos
    fullName: Vim.Math3d.MathOps.Acos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  name: Asin(DVector4)
  nameWithType: MathOps.Asin(DVector4)
  fullName: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Asin(Vim.Math3d.DVector4)
    name: Asin
    nameWithType: MathOps.Asin
    fullName: Vim.Math3d.MathOps.Asin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  name: Atan(DVector4)
  nameWithType: MathOps.Atan(DVector4)
  fullName: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Atan(Vim.Math3d.DVector4)
    name: Atan
    nameWithType: MathOps.Atan
    fullName: Vim.Math3d.MathOps.Atan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  name: Cos(DVector4)
  nameWithType: MathOps.Cos(DVector4)
  fullName: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cos(Vim.Math3d.DVector4)
    name: Cos
    nameWithType: MathOps.Cos
    fullName: Vim.Math3d.MathOps.Cos
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  name: Cosh(DVector4)
  nameWithType: MathOps.Cosh(DVector4)
  fullName: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cosh(Vim.Math3d.DVector4)
    name: Cosh
    nameWithType: MathOps.Cosh
    fullName: Vim.Math3d.MathOps.Cosh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  name: Exp(DVector4)
  nameWithType: MathOps.Exp(DVector4)
  fullName: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Exp(Vim.Math3d.DVector4)
    name: Exp
    nameWithType: MathOps.Exp
    fullName: Vim.Math3d.MathOps.Exp
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  name: Log(DVector4)
  nameWithType: MathOps.Log(DVector4)
  fullName: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log(Vim.Math3d.DVector4)
    name: Log
    nameWithType: MathOps.Log
    fullName: Vim.Math3d.MathOps.Log
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  name: Log10(DVector4)
  nameWithType: MathOps.Log10(DVector4)
  fullName: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Log10(Vim.Math3d.DVector4)
    name: Log10
    nameWithType: MathOps.Log10
    fullName: Vim.Math3d.MathOps.Log10
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  name: Sin(DVector4)
  nameWithType: MathOps.Sin(DVector4)
  fullName: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sin(Vim.Math3d.DVector4)
    name: Sin
    nameWithType: MathOps.Sin
    fullName: Vim.Math3d.MathOps.Sin
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  name: Sinh(DVector4)
  nameWithType: MathOps.Sinh(DVector4)
  fullName: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sinh(Vim.Math3d.DVector4)
    name: Sinh
    nameWithType: MathOps.Sinh
    fullName: Vim.Math3d.MathOps.Sinh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  name: Sqrt(DVector4)
  nameWithType: MathOps.Sqrt(DVector4)
  fullName: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqrt(Vim.Math3d.DVector4)
    name: Sqrt
    nameWithType: MathOps.Sqrt
    fullName: Vim.Math3d.MathOps.Sqrt
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  name: Tan(DVector4)
  nameWithType: MathOps.Tan(DVector4)
  fullName: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tan(Vim.Math3d.DVector4)
    name: Tan
    nameWithType: MathOps.Tan
    fullName: Vim.Math3d.MathOps.Tan
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  name: Tanh(DVector4)
  nameWithType: MathOps.Tanh(DVector4)
  fullName: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Tanh(Vim.Math3d.DVector4)
    name: Tanh
    nameWithType: MathOps.Tanh
    fullName: Vim.Math3d.MathOps.Tanh
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  name: Inverse(DVector4)
  nameWithType: MathOps.Inverse(DVector4)
  fullName: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Inverse(Vim.Math3d.DVector4)
    name: Inverse
    nameWithType: MathOps.Inverse
    fullName: Vim.Math3d.MathOps.Inverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  name: Ceiling(DVector4)
  nameWithType: MathOps.Ceiling(DVector4)
  fullName: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Ceiling(Vim.Math3d.DVector4)
    name: Ceiling
    nameWithType: MathOps.Ceiling
    fullName: Vim.Math3d.MathOps.Ceiling
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  name: Floor(DVector4)
  nameWithType: MathOps.Floor(DVector4)
  fullName: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Floor(Vim.Math3d.DVector4)
    name: Floor
    nameWithType: MathOps.Floor
    fullName: Vim.Math3d.MathOps.Floor
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  name: Round(DVector4)
  nameWithType: MathOps.Round(DVector4)
  fullName: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Round(Vim.Math3d.DVector4)
    name: Round
    nameWithType: MathOps.Round
    fullName: Vim.Math3d.MathOps.Round
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  name: Truncate(DVector4)
  nameWithType: MathOps.Truncate(DVector4)
  fullName: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Truncate(Vim.Math3d.DVector4)
    name: Truncate
    nameWithType: MathOps.Truncate
    fullName: Vim.Math3d.MathOps.Truncate
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  name: Sqr(DVector4)
  nameWithType: MathOps.Sqr(DVector4)
  fullName: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Sqr(Vim.Math3d.DVector4)
    name: Sqr
    nameWithType: MathOps.Sqr
    fullName: Vim.Math3d.MathOps.Sqr
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  name: Cube(DVector4)
  nameWithType: MathOps.Cube(DVector4)
  fullName: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.Cube(Vim.Math3d.DVector4)
    name: Cube
    nameWithType: MathOps.Cube
    fullName: Vim.Math3d.MathOps.Cube
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  name: ToRadians(DVector4)
  nameWithType: MathOps.ToRadians(DVector4)
  fullName: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToRadians(Vim.Math3d.DVector4)
    name: ToRadians
    nameWithType: MathOps.ToRadians
    fullName: Vim.Math3d.MathOps.ToRadians
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  commentId: M:Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  name: ToDegrees(DVector4)
  nameWithType: MathOps.ToDegrees(DVector4)
  fullName: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Vim.Math3d.MathOps.ToDegrees(Vim.Math3d.DVector4)
    name: ToDegrees
    nameWithType: MathOps.ToDegrees
    fullName: Vim.Math3d.MathOps.ToDegrees
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Vim.Math3d.DVector4.#ctor*
  commentId: Overload:Vim.Math3d.DVector4.#ctor
  name: DVector4
  nameWithType: DVector4.DVector4
  fullName: Vim.Math3d.DVector4.DVector4
- uid: System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  commentId: T:System.ValueTuple{System.Double,System.Double,System.Double,System.Double}
  parent: System
  definition: System.ValueTuple`4
  name: (T1, T2, T3, T4)<Double, Double, Double, Double>
  nameWithType: (T1, T2, T3, T4)<Double, Double, Double, Double>
  fullName: System.ValueTuple<System.Double, System.Double, System.Double, System.Double>
  nameWithType.vb: (T1, T2, T3, T4)(Of Double, Double, Double, Double)
  fullName.vb: System.ValueTuple(Of System.Double, System.Double, System.Double, System.Double)
  name.vb: (T1, T2, T3, T4)(Of Double, Double, Double, Double)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  isExternal: true
  name: (T1, T2, T3, T4)<T1, T2, T3, T4>
  nameWithType: (T1, T2, T3, T4)<T1, T2, T3, T4>
  fullName: System.ValueTuple<T1, T2, T3, T4>
  nameWithType.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  fullName.vb: System.ValueTuple(Of T1, T2, T3, T4)
  name.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Create*
  commentId: Overload:Vim.Math3d.DVector4.Create
  name: Create
  nameWithType: DVector4.Create
  fullName: Vim.Math3d.DVector4.Create
- uid: Vim.Math3d.DVector4
  commentId: T:Vim.Math3d.DVector4
  parent: Vim.Math3d
  name: DVector4
  nameWithType: DVector4
  fullName: Vim.Math3d.DVector4
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.Equals*
  commentId: Overload:Vim.Math3d.DVector4.Equals
  name: Equals
  nameWithType: DVector4.Equals
  fullName: Vim.Math3d.DVector4.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.GetHashCode*
  commentId: Overload:Vim.Math3d.DVector4.GetHashCode
  name: GetHashCode
  nameWithType: DVector4.GetHashCode
  fullName: Vim.Math3d.DVector4.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.ToString*
  commentId: Overload:Vim.Math3d.DVector4.ToString
  name: ToString
  nameWithType: DVector4.ToString
  fullName: Vim.Math3d.DVector4.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vim.Math3d.DVector4.Deconstruct*
  commentId: Overload:Vim.Math3d.DVector4.Deconstruct
  name: Deconstruct
  nameWithType: DVector4.Deconstruct
  fullName: Vim.Math3d.DVector4.Deconstruct
- uid: System.IEquatable{Vim.Math3d.DVector4}.Equals(Vim.Math3d.DVector4)
  commentId: M:System.IEquatable{Vim.Math3d.DVector4}.Equals(Vim.Math3d.DVector4)
  parent: System.IEquatable{Vim.Math3d.DVector4}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(DVector4)
  nameWithType: IEquatable<DVector4>.Equals(DVector4)
  fullName: System.IEquatable<Vim.Math3d.DVector4>.Equals(Vim.Math3d.DVector4)
  nameWithType.vb: IEquatable(Of DVector4).Equals(DVector4)
  fullName.vb: System.IEquatable(Of Vim.Math3d.DVector4).Equals(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<DVector4>.Equals
    fullName: System.IEquatable<Vim.Math3d.DVector4>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of DVector4).Equals
    fullName: System.IEquatable(Of Vim.Math3d.DVector4).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.op_Equality*
  commentId: Overload:Vim.Math3d.DVector4.op_Equality
  name: Equality
  nameWithType: DVector4.Equality
  fullName: Vim.Math3d.DVector4.Equality
- uid: Vim.Math3d.DVector4.op_Inequality*
  commentId: Overload:Vim.Math3d.DVector4.op_Inequality
  name: Inequality
  nameWithType: DVector4.Inequality
  fullName: Vim.Math3d.DVector4.Inequality
- uid: Vim.Math3d.DVector4.op_Implicit*
  commentId: Overload:Vim.Math3d.DVector4.op_Implicit
  name: Implicit
  nameWithType: DVector4.Implicit
  fullName: Vim.Math3d.DVector4.Implicit
  nameWithType.vb: DVector4.Widening
  fullName.vb: Vim.Math3d.DVector4.Widening
  name.vb: Widening
- uid: Vim.Math3d.DVector4.AlmostEquals*
  commentId: Overload:Vim.Math3d.DVector4.AlmostEquals
  name: AlmostEquals
  nameWithType: DVector4.AlmostEquals
  fullName: Vim.Math3d.DVector4.AlmostEquals
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Vim.Math3d.DVector4.SetX*
  commentId: Overload:Vim.Math3d.DVector4.SetX
  name: SetX
  nameWithType: DVector4.SetX
  fullName: Vim.Math3d.DVector4.SetX
- uid: Vim.Math3d.DVector4.SetY*
  commentId: Overload:Vim.Math3d.DVector4.SetY
  name: SetY
  nameWithType: DVector4.SetY
  fullName: Vim.Math3d.DVector4.SetY
- uid: Vim.Math3d.DVector4.SetZ*
  commentId: Overload:Vim.Math3d.DVector4.SetZ
  name: SetZ
  nameWithType: DVector4.SetZ
  fullName: Vim.Math3d.DVector4.SetZ
- uid: Vim.Math3d.DVector4.SetW*
  commentId: Overload:Vim.Math3d.DVector4.SetW
  name: SetW
  nameWithType: DVector4.SetW
  fullName: Vim.Math3d.DVector4.SetW
- uid: Vim.Math3d.DVector4.op_Addition*
  commentId: Overload:Vim.Math3d.DVector4.op_Addition
  name: Addition
  nameWithType: DVector4.Addition
  fullName: Vim.Math3d.DVector4.Addition
- uid: Vim.Math3d.DVector4.op_Subtraction*
  commentId: Overload:Vim.Math3d.DVector4.op_Subtraction
  name: Subtraction
  nameWithType: DVector4.Subtraction
  fullName: Vim.Math3d.DVector4.Subtraction
- uid: Vim.Math3d.DVector4.op_Multiply*
  commentId: Overload:Vim.Math3d.DVector4.op_Multiply
  name: Multiply
  nameWithType: DVector4.Multiply
  fullName: Vim.Math3d.DVector4.Multiply
- uid: Vim.Math3d.DVector4.op_Division*
  commentId: Overload:Vim.Math3d.DVector4.op_Division
  name: Division
  nameWithType: DVector4.Division
  fullName: Vim.Math3d.DVector4.Division
- uid: Vim.Math3d.DVector4.op_UnaryNegation*
  commentId: Overload:Vim.Math3d.DVector4.op_UnaryNegation
  name: UnaryNegation
  nameWithType: DVector4.UnaryNegation
  fullName: Vim.Math3d.DVector4.UnaryNegation
- uid: Vim.Math3d.DVector4.Dot*
  commentId: Overload:Vim.Math3d.DVector4.Dot
  name: Dot
  nameWithType: DVector4.Dot
  fullName: Vim.Math3d.DVector4.Dot
- uid: Vim.Math3d.DVector4.AlmostZero*
  commentId: Overload:Vim.Math3d.DVector4.AlmostZero
  name: AlmostZero
  nameWithType: DVector4.AlmostZero
  fullName: Vim.Math3d.DVector4.AlmostZero
- uid: Vim.Math3d.DVector4.AnyComponentNegative*
  commentId: Overload:Vim.Math3d.DVector4.AnyComponentNegative
  name: AnyComponentNegative
  nameWithType: DVector4.AnyComponentNegative
  fullName: Vim.Math3d.DVector4.AnyComponentNegative
- uid: Vim.Math3d.DVector4.MinComponent*
  commentId: Overload:Vim.Math3d.DVector4.MinComponent
  name: MinComponent
  nameWithType: DVector4.MinComponent
  fullName: Vim.Math3d.DVector4.MinComponent
- uid: Vim.Math3d.DVector4.MaxComponent*
  commentId: Overload:Vim.Math3d.DVector4.MaxComponent
  name: MaxComponent
  nameWithType: DVector4.MaxComponent
  fullName: Vim.Math3d.DVector4.MaxComponent
- uid: Vim.Math3d.DVector4.SumComponents*
  commentId: Overload:Vim.Math3d.DVector4.SumComponents
  name: SumComponents
  nameWithType: DVector4.SumComponents
  fullName: Vim.Math3d.DVector4.SumComponents
- uid: Vim.Math3d.DVector4.SumSqrComponents*
  commentId: Overload:Vim.Math3d.DVector4.SumSqrComponents
  name: SumSqrComponents
  nameWithType: DVector4.SumSqrComponents
  fullName: Vim.Math3d.DVector4.SumSqrComponents
- uid: Vim.Math3d.DVector4.ProductComponents*
  commentId: Overload:Vim.Math3d.DVector4.ProductComponents
  name: ProductComponents
  nameWithType: DVector4.ProductComponents
  fullName: Vim.Math3d.DVector4.ProductComponents
- uid: Vim.Math3d.DVector4.GetComponent*
  commentId: Overload:Vim.Math3d.DVector4.GetComponent
  name: GetComponent
  nameWithType: DVector4.GetComponent
  fullName: Vim.Math3d.DVector4.GetComponent
- uid: Vim.Math3d.DVector4.MagnitudeSquared*
  commentId: Overload:Vim.Math3d.DVector4.MagnitudeSquared
  name: MagnitudeSquared
  nameWithType: DVector4.MagnitudeSquared
  fullName: Vim.Math3d.DVector4.MagnitudeSquared
- uid: Vim.Math3d.DVector4.Magnitude*
  commentId: Overload:Vim.Math3d.DVector4.Magnitude
  name: Magnitude
  nameWithType: DVector4.Magnitude
  fullName: Vim.Math3d.DVector4.Magnitude
- uid: Vim.Math3d.DVector4.IsNaN*
  commentId: Overload:Vim.Math3d.DVector4.IsNaN
  name: IsNaN
  nameWithType: DVector4.IsNaN
  fullName: Vim.Math3d.DVector4.IsNaN
- uid: Vim.Math3d.DVector4.IsInfinity*
  commentId: Overload:Vim.Math3d.DVector4.IsInfinity
  name: IsInfinity
  nameWithType: DVector4.IsInfinity
  fullName: Vim.Math3d.DVector4.IsInfinity
- uid: Vim.Math3d.DVector4.CompareTo*
  commentId: Overload:Vim.Math3d.DVector4.CompareTo
  name: CompareTo
  nameWithType: DVector4.CompareTo
  fullName: Vim.Math3d.DVector4.CompareTo
- uid: System.IComparable{Vim.Math3d.DVector4}.CompareTo(Vim.Math3d.DVector4)
  commentId: M:System.IComparable{Vim.Math3d.DVector4}.CompareTo(Vim.Math3d.DVector4)
  parent: System.IComparable{Vim.Math3d.DVector4}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(DVector4)
  nameWithType: IComparable<DVector4>.CompareTo(DVector4)
  fullName: System.IComparable<Vim.Math3d.DVector4>.CompareTo(Vim.Math3d.DVector4)
  nameWithType.vb: IComparable(Of DVector4).CompareTo(DVector4)
  fullName.vb: System.IComparable(Of Vim.Math3d.DVector4).CompareTo(Vim.Math3d.DVector4)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<DVector4>.CompareTo
    fullName: System.IComparable<Vim.Math3d.DVector4>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of DVector4).CompareTo
    fullName: System.IComparable(Of Vim.Math3d.DVector4).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.DVector4
    name: DVector4
    nameWithType: DVector4
    fullName: Vim.Math3d.DVector4
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.DVector4.op_LessThan*
  commentId: Overload:Vim.Math3d.DVector4.op_LessThan
  name: LessThan
  nameWithType: DVector4.LessThan
  fullName: Vim.Math3d.DVector4.LessThan
- uid: Vim.Math3d.DVector4.op_LessThanOrEqual*
  commentId: Overload:Vim.Math3d.DVector4.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: DVector4.LessThanOrEqual
  fullName: Vim.Math3d.DVector4.LessThanOrEqual
- uid: Vim.Math3d.DVector4.op_GreaterThan*
  commentId: Overload:Vim.Math3d.DVector4.op_GreaterThan
  name: GreaterThan
  nameWithType: DVector4.GreaterThan
  fullName: Vim.Math3d.DVector4.GreaterThan
- uid: Vim.Math3d.DVector4.op_GreaterThanOrEqual*
  commentId: Overload:Vim.Math3d.DVector4.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: DVector4.GreaterThanOrEqual
  fullName: Vim.Math3d.DVector4.GreaterThanOrEqual
- uid: Vim.Math3d.DVector4.Vector4*
  commentId: Overload:Vim.Math3d.DVector4.Vector4
  name: Vector4
  nameWithType: DVector4.Vector4
  fullName: Vim.Math3d.DVector4.Vector4
- uid: Vim.Math3d.Vector4
  commentId: T:Vim.Math3d.Vector4
  parent: Vim.Math3d
  name: Vector4
  nameWithType: Vector4
  fullName: Vim.Math3d.Vector4
