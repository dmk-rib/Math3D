### YamlMime:ManagedReference
items:
- uid: Vim.Math3d.ColorHDR
  commentId: T:Vim.Math3d.ColorHDR
  id: ColorHDR
  parent: Vim.Math3d
  children:
  - Vim.Math3d.ColorHDR.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Vim.Math3d.ColorHDR.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  - Vim.Math3d.ColorHDR.A
  - Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  - Vim.Math3d.ColorHDR.B
  - Vim.Math3d.ColorHDR.Create(System.Single,System.Single,System.Single,System.Single)
  - Vim.Math3d.ColorHDR.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  - Vim.Math3d.ColorHDR.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  - Vim.Math3d.ColorHDR.Equals(System.Object)
  - Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  - Vim.Math3d.ColorHDR.G
  - Vim.Math3d.ColorHDR.GetHashCode
  - Vim.Math3d.ColorHDR.MaxValue
  - Vim.Math3d.ColorHDR.MinValue
  - Vim.Math3d.ColorHDR.op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  - Vim.Math3d.ColorHDR.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  - Vim.Math3d.ColorHDR.op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  - Vim.Math3d.ColorHDR.op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  - Vim.Math3d.ColorHDR.R
  - Vim.Math3d.ColorHDR.SetA(System.Single)
  - Vim.Math3d.ColorHDR.SetB(System.Single)
  - Vim.Math3d.ColorHDR.SetG(System.Single)
  - Vim.Math3d.ColorHDR.SetR(System.Single)
  - Vim.Math3d.ColorHDR.ToString
  - Vim.Math3d.ColorHDR.Zero
  langs:
  - csharp
  - vb
  name: ColorHDR
  nameWithType: ColorHDR
  fullName: Vim.Math3d.ColorHDR
  type: Struct
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ColorHDR
    path: ../src/Structs.cs
    startLine: 1768
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataContract]

      public readonly struct ColorHDR : IEquatable<ColorHDR>
    content.vb: >-
      <DataContract>

      Public Structure ColorHDR
          Implements IEquatable(Of ColorHDR)
  implements:
  - System.IEquatable{Vim.Math3d.ColorHDR}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Vim.Math3d.ColorHDR.R
  commentId: F:Vim.Math3d.ColorHDR.R
  id: R
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: R
  nameWithType: ColorHDR.R
  fullName: Vim.Math3d.ColorHDR.R
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: R
    path: ../src/Structs.cs
    startLine: 1774
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float R
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly R As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.ColorHDR.G
  commentId: F:Vim.Math3d.ColorHDR.G
  id: G
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: G
  nameWithType: ColorHDR.G
  fullName: Vim.Math3d.ColorHDR.G
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: G
    path: ../src/Structs.cs
    startLine: 1776
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float G
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly G As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.ColorHDR.B
  commentId: F:Vim.Math3d.ColorHDR.B
  id: B
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: B
  nameWithType: ColorHDR.B
  fullName: Vim.Math3d.ColorHDR.B
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: B
    path: ../src/Structs.cs
    startLine: 1778
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float B
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly B As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.ColorHDR.A
  commentId: F:Vim.Math3d.ColorHDR.A
  id: A
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: A
  nameWithType: ColorHDR.A
  fullName: Vim.Math3d.ColorHDR.A
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: A
    path: ../src/Structs.cs
    startLine: 1780
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: >-
      [DataMember]

      public readonly float A
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public ReadOnly A As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Vim.Math3d.ColorHDR.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  commentId: M:Vim.Math3d.ColorHDR.#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  id: '#ctor(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})'
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: ColorHDR((Single r, Single g, Single b, Single a))
  nameWithType: ColorHDR.ColorHDR((Single r, Single g, Single b, Single a))
  fullName: Vim.Math3d.ColorHDR.ColorHDR(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 1781
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public ColorHDR((float r, float g, float b, float a) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
    content.vb: Public Sub New(tuple As(r As Single, g As Single, b As Single, a As Single)(Of Single , Single, Single, Single))
  overload: Vim.Math3d.ColorHDR.#ctor*
  nameWithType.vb: ColorHDR.ColorHDR((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.ColorHDR.ColorHDR(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  name.vb: ColorHDR((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.ColorHDR.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: ColorHDR(Single, Single, Single, Single)
  nameWithType: ColorHDR.ColorHDR(Single, Single, Single, Single)
  fullName: Vim.Math3d.ColorHDR.ColorHDR(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: .ctor
    path: ../src/Structs.cs
    startLine: 1782
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public ColorHDR(float r, float g, float b, float a)
    parameters:
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    content.vb: Public Sub New(r As Single, g As Single, b As Single, a As Single)
  overload: Vim.Math3d.ColorHDR.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.Create(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Vim.Math3d.ColorHDR.Create(System.Single,System.Single,System.Single,System.Single)
  id: Create(System.Single,System.Single,System.Single,System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Create(Single, Single, Single, Single)
  nameWithType: ColorHDR.Create(Single, Single, Single, Single)
  fullName: Vim.Math3d.ColorHDR.Create(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 1783
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static ColorHDR Create(float r, float g, float b, float a)
    parameters:
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared Function Create(r As Single, g As Single, b As Single, a As Single) As ColorHDR
  overload: Vim.Math3d.ColorHDR.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  commentId: M:Vim.Math3d.ColorHDR.Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  id: Create(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Create((Single r, Single g, Single b, Single a))
  nameWithType: ColorHDR.Create((Single r, Single g, Single b, Single a))
  fullName: Vim.Math3d.ColorHDR.Create(System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Create
    path: ../src/Structs.cs
    startLine: 1784
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static ColorHDR Create((float r, float g, float b, float a) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared Function Create(tuple As(r As Single, g As Single, b As Single, a As Single)(Of Single , Single, Single, Single)) As ColorHDR
  overload: Vim.Math3d.ColorHDR.Create*
  nameWithType.vb: ColorHDR.Create((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.ColorHDR.Create(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  name.vb: Create((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.Equals(System.Object)
  commentId: M:Vim.Math3d.ColorHDR.Equals(System.Object)
  id: Equals(System.Object)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: ColorHDR.Equals(Object)
  fullName: Vim.Math3d.ColorHDR.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 1785
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Vim.Math3d.ColorHDR.Equals*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.ColorHDR.GetHashCode
  commentId: M:Vim.Math3d.ColorHDR.GetHashCode
  id: GetHashCode
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ColorHDR.GetHashCode()
  fullName: Vim.Math3d.ColorHDR.GetHashCode()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: GetHashCode
    path: ../src/Structs.cs
    startLine: 1786
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Vim.Math3d.ColorHDR.GetHashCode*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.ColorHDR.ToString
  commentId: M:Vim.Math3d.ColorHDR.ToString
  id: ToString
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ColorHDR.ToString()
  fullName: Vim.Math3d.ColorHDR.ToString()
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: ToString
    path: ../src/Structs.cs
    startLine: 1787
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Vim.Math3d.ColorHDR.ToString*
  modifiers.csharp:
  - public
  - override
  - readonly
  modifiers.vb:
  - Public
  - Overrides
- uid: Vim.Math3d.ColorHDR.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:Vim.Math3d.ColorHDR.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Deconstruct(out Single, out Single, out Single, out Single)
  nameWithType: ColorHDR.Deconstruct(out Single, out Single, out Single, out Single)
  fullName: Vim.Math3d.ColorHDR.Deconstruct(out System.Single, out System.Single, out System.Single, out System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Deconstruct
    path: ../src/Structs.cs
    startLine: 1788
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly void Deconstruct(out float r, out float g, out float b, out float a)
    parameters:
    - id: r
      type: System.Single
    - id: g
      type: System.Single
    - id: b
      type: System.Single
    - id: a
      type: System.Single
    content.vb: Public Sub Deconstruct(ByRef r As Single, ByRef g As Single, ByRef b As Single, ByRef a As Single)
  overload: Vim.Math3d.ColorHDR.Deconstruct*
  nameWithType.vb: ColorHDR.Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  fullName.vb: Vim.Math3d.ColorHDR.Deconstruct(ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: Deconstruct(ByRef Single, ByRef Single, ByRef Single, ByRef Single)
- uid: Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  commentId: M:Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  id: Equals(Vim.Math3d.ColorHDR)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Equals(ColorHDR)
  nameWithType: ColorHDR.Equals(ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Equals(Vim.Math3d.ColorHDR)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Equals
    path: ../src/Structs.cs
    startLine: 1789
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool Equals(ColorHDR x)
    parameters:
    - id: x
      type: Vim.Math3d.ColorHDR
    return:
      type: System.Boolean
    content.vb: Public Function Equals(x As ColorHDR) As Boolean
  overload: Vim.Math3d.ColorHDR.Equals*
  implements:
  - System.IEquatable{Vim.Math3d.ColorHDR}.Equals(Vim.Math3d.ColorHDR)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  commentId: M:Vim.Math3d.ColorHDR.op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  id: op_Equality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Equality(ColorHDR, ColorHDR)
  nameWithType: ColorHDR.Equality(ColorHDR, ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Equality(Vim.Math3d.ColorHDR, Vim.Math3d.ColorHDR)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Equality
    path: ../src/Structs.cs
    startLine: 1790
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator ==(ColorHDR x0, ColorHDR x1)
    parameters:
    - id: x0
      type: Vim.Math3d.ColorHDR
    - id: x1
      type: Vim.Math3d.ColorHDR
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(x0 As ColorHDR, x1 As ColorHDR) As Boolean
  overload: Vim.Math3d.ColorHDR.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  commentId: M:Vim.Math3d.ColorHDR.op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  id: op_Inequality(Vim.Math3d.ColorHDR,Vim.Math3d.ColorHDR)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Inequality(ColorHDR, ColorHDR)
  nameWithType: ColorHDR.Inequality(ColorHDR, ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Inequality(Vim.Math3d.ColorHDR, Vim.Math3d.ColorHDR)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Inequality
    path: ../src/Structs.cs
    startLine: 1791
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static bool operator !=(ColorHDR x0, ColorHDR x1)
    parameters:
    - id: x0
      type: Vim.Math3d.ColorHDR
    - id: x1
      type: Vim.Math3d.ColorHDR
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(x0 As ColorHDR, x1 As ColorHDR) As Boolean
  overload: Vim.Math3d.ColorHDR.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  commentId: M:Vim.Math3d.ColorHDR.op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  id: op_Implicit(System.ValueTuple{System.Single,System.Single,System.Single,System.Single})~Vim.Math3d.ColorHDR
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Implicit((Single r, Single g, Single b, Single a) to ColorHDR)
  nameWithType: ColorHDR.Implicit((Single r, Single g, Single b, Single a) to ColorHDR)
  fullName: Vim.Math3d.ColorHDR.Implicit(System.ValueTuple<System.Single, System.Single, System.Single, System.Single> to Vim.Math3d.ColorHDR)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 1792
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator ColorHDR((float r, float g, float b, float a) tuple)
    parameters:
    - id: tuple
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared Widening Operator CType(tuple As(r As Single, g As Single, b As Single, a As Single)(Of Single , Single, Single, Single)) As ColorHDR
  overload: Vim.Math3d.ColorHDR.op_Implicit*
  nameWithType.vb: ColorHDR.Widening((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single) to ColorHDR)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.ColorHDR.Widening(System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single) to Vim.Math3d.ColorHDR)
  name.vb: Widening((r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single) to ColorHDR)
- uid: Vim.Math3d.ColorHDR.op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  commentId: M:Vim.Math3d.ColorHDR.op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  id: op_Implicit(Vim.Math3d.ColorHDR)~System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Implicit(ColorHDR to (Single r, Single g, Single b, Single a))
  nameWithType: ColorHDR.Implicit(ColorHDR to (Single r, Single g, Single b, Single a))
  fullName: Vim.Math3d.ColorHDR.Implicit(Vim.Math3d.ColorHDR to System.ValueTuple<System.Single, System.Single, System.Single, System.Single>)
  type: Operator
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: op_Implicit
    path: ../src/Structs.cs
    startLine: 1793
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static implicit operator (float r, float g, float b, float a)(ColorHDR self)
    parameters:
    - id: self
      type: Vim.Math3d.ColorHDR
    return:
      type: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
    content.vb: Public Shared Widening Operator CType(self As ColorHDR) As(r As Single, g As Single, b As Single, a As Single)(Of Single , Single, Single, Single)
  overload: Vim.Math3d.ColorHDR.op_Implicit*
  nameWithType.vb: ColorHDR.Widening(ColorHDR to (r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Vim.Math3d.ColorHDR.Widening(Vim.Math3d.ColorHDR to System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single))
  name.vb: Widening(ColorHDR to (r As Single, g As Single, b As Single, a As Single)(Of Single, Single, Single, Single))
- uid: Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  commentId: M:Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  id: AlmostEquals(Vim.Math3d.ColorHDR,System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: AlmostEquals(ColorHDR, Single)
  nameWithType: ColorHDR.AlmostEquals(ColorHDR, Single)
  fullName: Vim.Math3d.ColorHDR.AlmostEquals(Vim.Math3d.ColorHDR, System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: AlmostEquals
    path: ../src/Structs.cs
    startLine: 1795
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly bool AlmostEquals(ColorHDR x, float tolerance = 1E-07F)
    parameters:
    - id: x
      type: Vim.Math3d.ColorHDR
    - id: tolerance
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function AlmostEquals(x As ColorHDR, tolerance As Single = 1E-07F) As Boolean
  overload: Vim.Math3d.ColorHDR.AlmostEquals*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.Zero
  commentId: F:Vim.Math3d.ColorHDR.Zero
  id: Zero
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: ColorHDR.Zero
  fullName: Vim.Math3d.ColorHDR.Zero
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: Zero
    path: ../src/Structs.cs
    startLine: 1796
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static ColorHDR Zero
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared Zero As ColorHDR
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.MinValue
  commentId: F:Vim.Math3d.ColorHDR.MinValue
  id: MinValue
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: ColorHDR.MinValue
  fullName: Vim.Math3d.ColorHDR.MinValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MinValue
    path: ../src/Structs.cs
    startLine: 1797
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static ColorHDR MinValue
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared MinValue As ColorHDR
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.MaxValue
  commentId: F:Vim.Math3d.ColorHDR.MaxValue
  id: MaxValue
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: ColorHDR.MaxValue
  fullName: Vim.Math3d.ColorHDR.MaxValue
  type: Field
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: MaxValue
    path: ../src/Structs.cs
    startLine: 1798
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public static ColorHDR MaxValue
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Shared MaxValue As ColorHDR
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Vim.Math3d.ColorHDR.SetR(System.Single)
  commentId: M:Vim.Math3d.ColorHDR.SetR(System.Single)
  id: SetR(System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: SetR(Single)
  nameWithType: ColorHDR.SetR(Single)
  fullName: Vim.Math3d.ColorHDR.SetR(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetR
    path: ../src/Structs.cs
    startLine: 1799
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly ColorHDR SetR(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Function SetR(x As Single) As ColorHDR
  overload: Vim.Math3d.ColorHDR.SetR*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.SetG(System.Single)
  commentId: M:Vim.Math3d.ColorHDR.SetG(System.Single)
  id: SetG(System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: SetG(Single)
  nameWithType: ColorHDR.SetG(Single)
  fullName: Vim.Math3d.ColorHDR.SetG(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetG
    path: ../src/Structs.cs
    startLine: 1800
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly ColorHDR SetG(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Function SetG(x As Single) As ColorHDR
  overload: Vim.Math3d.ColorHDR.SetG*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.SetB(System.Single)
  commentId: M:Vim.Math3d.ColorHDR.SetB(System.Single)
  id: SetB(System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: SetB(Single)
  nameWithType: ColorHDR.SetB(Single)
  fullName: Vim.Math3d.ColorHDR.SetB(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetB
    path: ../src/Structs.cs
    startLine: 1801
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly ColorHDR SetB(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Function SetB(x As Single) As ColorHDR
  overload: Vim.Math3d.ColorHDR.SetB*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
- uid: Vim.Math3d.ColorHDR.SetA(System.Single)
  commentId: M:Vim.Math3d.ColorHDR.SetA(System.Single)
  id: SetA(System.Single)
  parent: Vim.Math3d.ColorHDR
  langs:
  - csharp
  - vb
  name: SetA(Single)
  nameWithType: ColorHDR.SetA(Single)
  fullName: Vim.Math3d.ColorHDR.SetA(System.Single)
  type: Method
  source:
    remote:
      path: src/Structs.cs
      branch: dev
      repo: https://github.com/vimaec/Math3D.git
    id: SetA
    path: ../src/Structs.cs
    startLine: 1802
  assemblies:
  - Vim.Math3D
  namespace: Vim.Math3d
  syntax:
    content: public readonly ColorHDR SetA(float x)
    parameters:
    - id: x
      type: System.Single
    return:
      type: Vim.Math3d.ColorHDR
    content.vb: Public Function SetA(x As Single) As ColorHDR
  overload: Vim.Math3d.ColorHDR.SetA*
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
references:
- uid: Vim.Math3d
  commentId: N:Vim.Math3d
  name: Vim.Math3d
  nameWithType: Vim.Math3d
  fullName: Vim.Math3d
- uid: System.IEquatable{Vim.Math3d.ColorHDR}
  commentId: T:System.IEquatable{Vim.Math3d.ColorHDR}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ColorHDR>
  nameWithType: IEquatable<ColorHDR>
  fullName: System.IEquatable<Vim.Math3d.ColorHDR>
  nameWithType.vb: IEquatable(Of ColorHDR)
  fullName.vb: System.IEquatable(Of Vim.Math3d.ColorHDR)
  name.vb: IEquatable(Of ColorHDR)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vim.Math3d.ColorHDR
    name: ColorHDR
    nameWithType: ColorHDR
    fullName: Vim.Math3d.ColorHDR
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vim.Math3d.ColorHDR
    name: ColorHDR
    nameWithType: ColorHDR
    fullName: Vim.Math3d.ColorHDR
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Vim.Math3d.ColorHDR.#ctor*
  commentId: Overload:Vim.Math3d.ColorHDR.#ctor
  name: ColorHDR
  nameWithType: ColorHDR.ColorHDR
  fullName: Vim.Math3d.ColorHDR.ColorHDR
- uid: System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`4
  name: (T1, T2, T3, T4)<Single, Single, Single, Single>
  nameWithType: (T1, T2, T3, T4)<Single, Single, Single, Single>
  fullName: System.ValueTuple<System.Single, System.Single, System.Single, System.Single>
  nameWithType.vb: (T1, T2, T3, T4)(Of Single, Single, Single, Single)
  fullName.vb: System.ValueTuple(Of System.Single, System.Single, System.Single, System.Single)
  name.vb: (T1, T2, T3, T4)(Of Single, Single, Single, Single)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  isExternal: true
  name: (T1, T2, T3, T4)<T1, T2, T3, T4>
  nameWithType: (T1, T2, T3, T4)<T1, T2, T3, T4>
  fullName: System.ValueTuple<T1, T2, T3, T4>
  nameWithType.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  fullName.vb: System.ValueTuple(Of T1, T2, T3, T4)
  name.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ColorHDR.Create*
  commentId: Overload:Vim.Math3d.ColorHDR.Create
  name: Create
  nameWithType: ColorHDR.Create
  fullName: Vim.Math3d.ColorHDR.Create
- uid: Vim.Math3d.ColorHDR
  commentId: T:Vim.Math3d.ColorHDR
  parent: Vim.Math3d
  name: ColorHDR
  nameWithType: ColorHDR
  fullName: Vim.Math3d.ColorHDR
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ColorHDR.Equals*
  commentId: Overload:Vim.Math3d.ColorHDR.Equals
  name: Equals
  nameWithType: ColorHDR.Equals
  fullName: Vim.Math3d.ColorHDR.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ColorHDR.GetHashCode*
  commentId: Overload:Vim.Math3d.ColorHDR.GetHashCode
  name: GetHashCode
  nameWithType: ColorHDR.GetHashCode
  fullName: Vim.Math3d.ColorHDR.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ColorHDR.ToString*
  commentId: Overload:Vim.Math3d.ColorHDR.ToString
  name: ToString
  nameWithType: ColorHDR.ToString
  fullName: Vim.Math3d.ColorHDR.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Vim.Math3d.ColorHDR.Deconstruct*
  commentId: Overload:Vim.Math3d.ColorHDR.Deconstruct
  name: Deconstruct
  nameWithType: ColorHDR.Deconstruct
  fullName: Vim.Math3d.ColorHDR.Deconstruct
- uid: System.IEquatable{Vim.Math3d.ColorHDR}.Equals(Vim.Math3d.ColorHDR)
  commentId: M:System.IEquatable{Vim.Math3d.ColorHDR}.Equals(Vim.Math3d.ColorHDR)
  parent: System.IEquatable{Vim.Math3d.ColorHDR}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ColorHDR)
  nameWithType: IEquatable<ColorHDR>.Equals(ColorHDR)
  fullName: System.IEquatable<Vim.Math3d.ColorHDR>.Equals(Vim.Math3d.ColorHDR)
  nameWithType.vb: IEquatable(Of ColorHDR).Equals(ColorHDR)
  fullName.vb: System.IEquatable(Of Vim.Math3d.ColorHDR).Equals(Vim.Math3d.ColorHDR)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ColorHDR>.Equals
    fullName: System.IEquatable<Vim.Math3d.ColorHDR>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ColorHDR
    name: ColorHDR
    nameWithType: ColorHDR
    fullName: Vim.Math3d.ColorHDR
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ColorHDR).Equals
    fullName: System.IEquatable(Of Vim.Math3d.ColorHDR).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Vim.Math3d.ColorHDR
    name: ColorHDR
    nameWithType: ColorHDR
    fullName: Vim.Math3d.ColorHDR
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Vim.Math3d.ColorHDR.op_Equality*
  commentId: Overload:Vim.Math3d.ColorHDR.op_Equality
  name: Equality
  nameWithType: ColorHDR.Equality
  fullName: Vim.Math3d.ColorHDR.Equality
- uid: Vim.Math3d.ColorHDR.op_Inequality*
  commentId: Overload:Vim.Math3d.ColorHDR.op_Inequality
  name: Inequality
  nameWithType: ColorHDR.Inequality
  fullName: Vim.Math3d.ColorHDR.Inequality
- uid: Vim.Math3d.ColorHDR.op_Implicit*
  commentId: Overload:Vim.Math3d.ColorHDR.op_Implicit
  name: Implicit
  nameWithType: ColorHDR.Implicit
  fullName: Vim.Math3d.ColorHDR.Implicit
  nameWithType.vb: ColorHDR.Widening
  fullName.vb: Vim.Math3d.ColorHDR.Widening
  name.vb: Widening
- uid: Vim.Math3d.ColorHDR.AlmostEquals*
  commentId: Overload:Vim.Math3d.ColorHDR.AlmostEquals
  name: AlmostEquals
  nameWithType: ColorHDR.AlmostEquals
  fullName: Vim.Math3d.ColorHDR.AlmostEquals
- uid: Vim.Math3d.ColorHDR.SetR*
  commentId: Overload:Vim.Math3d.ColorHDR.SetR
  name: SetR
  nameWithType: ColorHDR.SetR
  fullName: Vim.Math3d.ColorHDR.SetR
- uid: Vim.Math3d.ColorHDR.SetG*
  commentId: Overload:Vim.Math3d.ColorHDR.SetG
  name: SetG
  nameWithType: ColorHDR.SetG
  fullName: Vim.Math3d.ColorHDR.SetG
- uid: Vim.Math3d.ColorHDR.SetB*
  commentId: Overload:Vim.Math3d.ColorHDR.SetB
  name: SetB
  nameWithType: ColorHDR.SetB
  fullName: Vim.Math3d.ColorHDR.SetB
- uid: Vim.Math3d.ColorHDR.SetA*
  commentId: Overload:Vim.Math3d.ColorHDR.SetA
  name: SetA
  nameWithType: ColorHDR.SetA
  fullName: Vim.Math3d.ColorHDR.SetA
